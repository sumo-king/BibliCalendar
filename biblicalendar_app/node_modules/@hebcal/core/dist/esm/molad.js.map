{"version":3,"file":"molad.js","sources":["../../../src/molad.ts"],"sourcesContent":["/* eslint-disable camelcase */\nimport {Event, flags} from './event';\nimport {CalOptions} from './CalOptions';\nimport {HDate, Locale, molad, Molad as MoladBase} from '@hebcal/hdate';\nimport {reformatTimeStr} from './reformatTimeStr';\nimport './locale'; // Adds Hebrew and Ashkenazic translations\n\nconst shortDayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst heDayNames = [\n  'רִאשׁוֹן',\n  'שֵׁנִי',\n  'שְׁלִישִׁי',\n  'רְבִיעִי',\n  'חֲמִישִׁי',\n  'שִׁישִּׁי',\n  'שַׁבָּת',\n];\n\nconst night = 'בַּלַּ֥יְלָה';\n\nfunction getHebrewTimeOfDay(hour: number): string {\n  if (hour < 5) return night;\n  else if (hour < 12) return 'בַּבֹּקֶר';\n  else if (hour < 17) return 'בַּצׇּהֳרַיִים';\n  else if (hour < 21) return 'בָּעֶרֶב';\n  return night;\n}\n\n/**\n * Represents a molad, the moment when the new moon is \"born\"\n */\nexport class Molad {\n  private readonly m: MoladBase;\n  /**\n   * Calculates the molad for a Hebrew month\n   * @param year\n   * @param month\n   */\n  constructor(year: number, month: number) {\n    this.m = molad(year, month);\n  }\n  /**\n   */\n  getYear(): number {\n    return this.m.year;\n  }\n  /**\n   */\n  getMonth(): number {\n    return this.m.month;\n  }\n  /**\n   */\n  getMonthName(): string {\n    return HDate.getMonthName(this.m.month, this.m.year);\n  }\n  /**\n   * @returns Day of Week (0=Sunday, 6=Saturday)\n   */\n  getDow(): number {\n    return this.m.dayOfWeek;\n  }\n  /**\n   * @returns hour of day (0-23)\n   */\n  getHour(): number {\n    return this.m.hour;\n  }\n  /**\n   * @returns minutes past hour (0-59)\n   */\n  getMinutes(): number {\n    return this.m.minutes;\n  }\n  /**\n   * @returns parts of a minute (0-17)\n   */\n  getChalakim(): number {\n    return this.m.chalakim;\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale)\n   * @param options\n   */\n  render(locale?: string, options?: CalOptions): string {\n    locale = locale ?? Locale.getLocaleName();\n    if (typeof locale === 'string') {\n      locale = locale.toLowerCase();\n    }\n    const isHebrewLocale =\n      locale === 'he' || locale === 'he-x-nonikud' || locale === 'h';\n    const monthName = Locale.gettext(this.getMonthName(), locale);\n    const dayNames = isHebrewLocale ? heDayNames : shortDayNames;\n    const dow = dayNames[this.getDow()];\n    const minutes = this.getMinutes();\n    const hour = this.getHour();\n    const chalakim = this.getChalakim();\n    const moladStr = Locale.gettext('Molad', locale);\n    const minutesStr = Locale.lookupTranslation('min', locale) ?? 'minutes';\n    const chalakimStr = Locale.gettext('chalakim', locale);\n    if (isHebrewLocale) {\n      const ampm = getHebrewTimeOfDay(hour);\n      const result =\n        `${moladStr} ${monthName} יִהְיֶה בַּיּוֹם ${dow} בשָׁבוּעַ, ` +\n        `בְּשָׁעָה ${hour} ${ampm}, ` +\n        `ו-${minutes} ${minutesStr} ` +\n        `ו-${chalakim} ${chalakimStr}`;\n      if (locale === 'he-x-nonikud') {\n        return Locale.hebrewStripNikkud(result);\n      }\n      return result;\n    }\n    const fmtTime = reformatTimeStr(`${hour}:00`, 'pm', options);\n    const month = monthName.replace(/'/g, '’');\n    return `${moladStr} ${month}: ${dow}, ${minutes} ${minutesStr} and ${chalakim} ${chalakimStr} after ${fmtTime}`;\n  }\n}\n\n/** Represents a Molad announcement on Shabbat Mevarchim */\nexport class MoladEvent extends Event {\n  readonly molad: Molad;\n  private readonly options: CalOptions;\n  /**\n   * @param date Hebrew date event occurs\n   * @param hyear molad year\n   * @param hmonth molad month\n   * @param options\n   */\n  constructor(date: HDate, hyear: number, hmonth: number, options: CalOptions) {\n    const m = new Molad(hyear, hmonth);\n    const monthName = m.getMonthName();\n    super(date, `Molad ${monthName} ${hyear}`, flags.MOLAD);\n    this.molad = m;\n    this.options = options;\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale?: string): string {\n    return this.molad.render(locale, this.options);\n  }\n}\n"],"names":[],"mappings":"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"}