{"ast":null,"code":"/*! @hebcal/hdate v0.13.5, distributed under GPLv2 https://www.gnu.org/licenses/gpl-2.0.txt */\nimport { monthsInYear } from './hdateBase.js';\n\n/**\n * Calculates the molad for a Hebrew month\n */\nfunction molad(year, month) {\n  let m_adj = month - 7;\n  if (m_adj < 0) {\n    m_adj += monthsInYear(year);\n  }\n  const mElapsed = 235 * Math.floor((year - 1) / 19) +\n  // Months in complete 19 year lunar (Metonic) cycles so far\n  12 * ((year - 1) % 19) +\n  // Regular months in this cycle\n  Math.floor((7 * ((year - 1) % 19) + 1) / 19) +\n  // Leap months this cycle\n  m_adj; // add elapsed months till the start of the molad of the month\n  const pElapsed = 204 + Math.floor(793 * (mElapsed % 1080));\n  const hElapsed = 5 + 12 * mElapsed + 793 * Math.floor(mElapsed / 1080) + Math.floor(pElapsed / 1080) - 6;\n  const parts = pElapsed % 1080 + 1080 * (hElapsed % 24);\n  const chalakim = parts % 1080;\n  const day = 1 + 29 * mElapsed + Math.floor(hElapsed / 24);\n  return {\n    year,\n    month,\n    dayOfWeek: day % 7,\n    hour: hElapsed % 24,\n    minutes: Math.floor(chalakim / 18),\n    chalakim: chalakim % 18\n  };\n}\nexport { molad };","map":{"version":3,"names":["molad","year","month","m_adj","monthsInYear","mElapsed","Math","floor","pElapsed","hElapsed","parts","chalakim","day","dayOfWeek","hour","minutes"],"sources":["/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/node_modules/@hebcal/src/molad.ts"],"sourcesContent":["import {monthsInYear} from './hdateBase';\n\n/**\n * Represents a molad, the moment when the new moon is \"born\"\n */\nexport type Molad = {\n  /** Hebrew year */\n  readonly year: number;\n  /** Hebrew month */\n  readonly month: number;\n  /** Day of Week (0=Sunday, 6=Saturday) */\n  readonly dayOfWeek: number;\n  /** hour of day (0-23) */\n  readonly hour: number;\n  /** minutes past hour (0-59) */\n  readonly minutes: number;\n  /** parts of a minute (0-17) */\n  readonly chalakim: number;\n};\n\n/**\n * Calculates the molad for a Hebrew month\n */\nexport function molad(year: number, month: number): Molad {\n  let m_adj = month - 7;\n  if (m_adj < 0) {\n    m_adj += monthsInYear(year);\n  }\n\n  const mElapsed =\n    235 * Math.floor((year - 1) / 19) + // Months in complete 19 year lunar (Metonic) cycles so far\n    12 * ((year - 1) % 19) + // Regular months in this cycle\n    Math.floor((7 * ((year - 1) % 19) + 1) / 19) + // Leap months this cycle\n    m_adj; // add elapsed months till the start of the molad of the month\n\n  const pElapsed = 204 + Math.floor(793 * (mElapsed % 1080));\n\n  const hElapsed =\n    5 +\n    12 * mElapsed +\n    793 * Math.floor(mElapsed / 1080) +\n    Math.floor(pElapsed / 1080) -\n    6;\n\n  const parts = (pElapsed % 1080) + 1080 * (hElapsed % 24);\n\n  const chalakim = parts % 1080;\n\n  const day = 1 + 29 * mElapsed + Math.floor(hElapsed / 24);\n\n  return {\n    year,\n    month,\n    dayOfWeek: day % 7,\n    hour: hElapsed % 24,\n    minutes: Math.floor(chalakim / 18),\n    chalakim: chalakim % 18,\n  };\n}\n"],"mappings":";;;AAoBA;;AAEG;AACa,SAAAA,KAAKA,CAACC,IAAY,EAAEC,KAAa;EAC/C,IAAIC,KAAK,GAAGD,KAAK,GAAG,CAAC;EACrB,IAAIC,KAAK,GAAG,CAAC,EAAE;IACbA,KAAK,IAAIC,YAAY,CAACH,IAAI,CAAC;;EAG7B,MAAMI,QAAQ,GACZ,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACN,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;EAAA;EACjC,EAAE,IAAI,CAACA,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;EAAA;EACtBK,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,IAAI,CAACN,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;EAAA;EAC5CE,KAAK,CAAC;EAER,MAAMK,QAAQ,GAAG,GAAG,GAAGF,IAAI,CAACC,KAAK,CAAC,GAAG,IAAIF,QAAQ,GAAG,IAAI,CAAC,CAAC;EAE1D,MAAMI,QAAQ,GACZ,CAAC,GACD,EAAE,GAAGJ,QAAQ,GACb,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAG,IAAI,CAAC,GACjCC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,IAAI,CAAC,GAC3B,CAAC;EAEH,MAAME,KAAK,GAAIF,QAAQ,GAAG,IAAI,GAAI,IAAI,IAAIC,QAAQ,GAAG,EAAE,CAAC;EAExD,MAAME,QAAQ,GAAGD,KAAK,GAAG,IAAI;EAE7B,MAAME,GAAG,GAAG,CAAC,GAAG,EAAE,GAAGP,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACE,QAAQ,GAAG,EAAE,CAAC;EAEzD,OAAO;IACLR,IAAI;IACJC,KAAK;IACLW,SAAS,EAAED,GAAG,GAAG,CAAC;IAClBE,IAAI,EAAEL,QAAQ,GAAG,EAAE;IACnBM,OAAO,EAAET,IAAI,CAACC,KAAK,CAACI,QAAQ,GAAG,EAAE,CAAC;IAClCA,QAAQ,EAAEA,QAAQ,GAAG;GACtB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}