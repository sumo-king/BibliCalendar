{"ast":null,"code":"/*! @hebcal/core v5.9.0, distributed under GPLv2 https://www.gnu.org/licenses/gpl-2.0.txt */\nimport './locale.js';\nimport { months, Locale, abs2greg, HDate } from '@hebcal/hdate';\nimport { makeCandleEvent, makeFastStartEnd, makeWeekdayChanukahCandleLighting } from './candles.js';\nimport { flags, Event } from './event.js';\nimport { getStartAndEnd } from './getStartAndEnd.js';\nimport { HebrewDateEvent } from './HebrewDateEvent.js';\nimport { getHolidaysForYear_ } from './holidays.js';\nimport { ParshaEvent } from './ParshaEvent.js';\nimport { getSedra } from './sedra.js';\nimport { HavdalahEvent } from './TimedEvent.js';\nimport { DailyLearning } from './DailyLearning.js';\nimport { MevarchimChodeshEvent } from './MevarchimChodeshEvent.js';\nimport { MoladEvent, Molad } from './molad.js';\nimport { OmerEvent } from './omer.js';\nimport { Zmanim } from './zmanim.js';\nimport { Location } from './location.js';\n\n/**\n * Calculates holidays and other Hebrew calendar events based on {@link CalOptions}.\n *\n * Each holiday is represented by an {@link Event} object which includes a date,\n * a description, flags and optional attributes.\n * If given no options, returns holidays for the Diaspora for the current Gregorian year.\n *\n * The date range returned by this function can be controlled by:\n * * `options.year` - Gregorian (e.g. 1993) or Hebrew year (e.g. 5749)\n * * `options.isHebrewYear` - to interpret `year` as Hebrew year\n * * `options.numYears` - generate calendar for multiple years (default 1)\n * * `options.month` - Gregorian or Hebrew month (to filter results to a single month)\n *\n * Alternatively, specify start and end days with `Date` or {@link HDate} instances:\n * * `options.start` - use specific start date (requires `end` date)\n * * `options.end` - use specific end date (requires `start` date)\n *\n * Unless `options.noHolidays == true`, default holidays include:\n * * Major holidays - Rosh Hashana, Yom Kippur, Pesach, Sukkot, etc.\n * * Minor holidays - Purim, Chanukah, Tu BiShvat, Lag BaOmer, etc.\n * * Minor fasts - Ta'anit Esther, Tzom Gedaliah, etc. (unless `options.noMinorFast`)\n * * Special Shabbatot - Shabbat Shekalim, Zachor, etc. (unless `options.noSpecialShabbat`)\n * * Modern Holidays - Yom HaShoah, Yom HaAtzma'ut, etc. (unless `options.noModern`)\n * * Rosh Chodesh (unless `options.noRoshChodesh`)\n *\n * Holiday and Torah reading schedules differ between Israel and the Disapora.\n * Set `options.il=true` to use the Israeli schedule.\n *\n * Additional non-default event types can be specified:\n * * Parashat HaShavua - weekly Torah Reading on Saturdays (`options.sedrot`)\n * * Counting of the Omer (`options.omer`)\n * * Shabbat Mevarchim HaChodesh on Saturday before Rosh Chodesh (`options.shabbatMevarchim`)\n * * Molad announcement on Saturday before Rosh Chodesh (`options.molad`)\n * * Yom Kippur Katan (`options.yomKippurKatan`)\n * * Yizkor (`options.yizkor`)\n *\n * Daily Study of texts are supported by the\n * {@link https://github.com/hebcal/hebcal-learning @hebcal/learning} package,\n * for example:\n * * Babylonian Talmud Daf Yomi (`options.dailyLearning.dafYomi`)\n * * Jerusalem Talmud (Yerushalmi) Yomi (`options.dailyLearning.yerushalmi`)\n * * Mishna Yomi (`options.dailyLearning.mishnaYomi`)\n * * Nach Yomi (`options.dailyLearning.nachYomi`)\n *\n * Candle-lighting and Havdalah times are approximated using latitude and longitude\n * specified by the {@link Location} class. The `Location` class contains a small\n * database of cities with their associated geographic information and time-zone information.\n * If you ever have any doubts about Hebcal's times, consult your local halachic authority.\n * If you enter geographic coordinates above the arctic circle or antarctic circle,\n * the times are guaranteed to be wrong.\n *\n * To add candle-lighting options, set `options.candlelighting=true` and set\n * `options.location` to an instance of `Location`. By default, candle lighting\n * time is 18 minutes before sundown (40 minutes for Jerusalem,\n * 30 minutes for Haifa and Zikhron Ya'akov) and Havdalah is\n * calculated according to Tzeit Hakochavim - Nightfall (the point when 3 small stars\n * are observable in the night time sky with the naked eye). The default Havdalah\n * option (Tzeit Hakochavim) is calculated when the sun is 8.5¬∞ below the horizon.\n * These defaults can be changed using these options:\n * * `options.candleLightingMins` - minutes before sundown to light candles\n * * `options.havdalahMins` - minutes after sundown for Havdalah (typical values are 42, 50, or 72).\n *    Havdalah times are suppressed when `options.havdalahMins=0`.\n * * `options.havdalahDeg` - degrees for solar depression for Havdalah.\n *    Default is 8.5 degrees for 3 small stars. Use 7.083 degrees for 3 medium-sized stars.\n *    Havdalah times are suppressed when `options.havdalahDeg=0`.\n *\n * If both `options.candlelighting=true` and `options.location` is specified,\n * Chanukah candle-lighting times and minor fast start/end times will also be generated.\n * Chanukah candle-lighting is at Bein HaShmashos (13.5 minutes before\n * the sun is 7.083¬∞ below the horizon in the evening)\n * on weekdays, at regular candle-lighting time on Fridays, and at regular Havdalah time on\n * Saturday night (see above).\n *\n * Minor fasts begin at Alot HaShachar (sun is 16.1¬∞ below the horizon in the morning) and\n * end when 3 medium-sized stars are observable in the night sky (sun is 7.083¬∞ below the horizon\n * in the evening).\n *\n * Two options also exist for generating an Event with the Hebrew date:\n * * `options.addHebrewDates` - print the Hebrew date for the entire date range\n * * `options.addHebrewDatesForEvents` - print the Hebrew date for dates with some events\n *\n * Lastly, translation and transliteration of event titles is controlled by\n * `options.locale` and the {@link Locale} API.\n * `@hebcal/core` supports three locales by default:\n * * `en` - default, Sephardic transliterations (e.g. \"Shabbat\")\n * * `ashkenazi` - Ashkenazi transliterations (e.g. \"Shabbos\")\n * * `he` - Hebrew (e.g. \"◊©÷∑◊Å◊ë÷∏÷º◊™\")\n *\n * Additional locales (such as `ru` or `fr`) are supported by the\n * {@link https://github.com/hebcal/hebcal-locales @hebcal/locales} package\n *\n * @example\n * import {HebrewCalendar, HDate, Location, Event} from '@hebcal/core';\n * const options: CalOptions = {\n *   year: 1981,\n *   isHebrewYear: false,\n *   candlelighting: true,\n *   location: Location.lookup('San Francisco'),\n *   sedrot: true,\n *   omer: true,\n * };\n * const events = HebrewCalendar.calendar(options);\n * for (const ev of events) {\n *   const hd = ev.getDate();\n *   const date = hd.greg();\n *   console.log(date.toLocaleDateString(), ev.render('en'), hd.toString());\n * }\n */\nfunction calendar(options = {}) {\n  options = Object.assign({}, options); // so we can modify freely\n  checkCandleOptions(options);\n  const location = options.location = options.location || defaultLocation;\n  const il = options.il = options.il || location.getIsrael() || false;\n  const hasUserMask = typeof options.mask === 'number';\n  options.mask = getMaskFromOptions(options);\n  if (options.ashkenazi || options.locale) {\n    if (options.locale && typeof options.locale !== 'string') {\n      throw new TypeError(`Invalid options.locale: ${options.locale}`);\n    }\n    const locale = options.ashkenazi ? 'ashkenazi' : options.locale;\n    const translationObj = Locale.useLocale(locale);\n    if (!translationObj) {\n      throw new TypeError(`Locale '${locale}' not found; did you forget to import @hebcal/locales?`);\n    }\n  } else {\n    Locale.useLocale('en');\n  }\n  const evts = [];\n  let sedra;\n  let holidaysYear;\n  let beginOmer = -1;\n  let endOmer = -1;\n  let currentYear = -1;\n  const startAndEnd = getStartAndEnd(options);\n  warnUnrecognizedOptions(options);\n  const startAbs = startAndEnd[0];\n  const endAbs = startAndEnd[1];\n  const startGreg = abs2greg(startAbs);\n  if (startGreg.getFullYear() < 100) {\n    options.candlelighting = false;\n  }\n  for (let abs = startAbs; abs <= endAbs; abs++) {\n    const hd = new HDate(abs);\n    const hyear = hd.getFullYear();\n    if (hyear !== currentYear) {\n      currentYear = hyear;\n      holidaysYear = getHolidaysForYear_(currentYear);\n      if (options.sedrot) {\n        sedra = getSedra(currentYear, il);\n      }\n      if (options.omer) {\n        beginOmer = HDate.hebrew2abs(currentYear, NISAN, 16);\n        endOmer = HDate.hebrew2abs(currentYear, SIVAN, 5);\n      }\n    }\n    const prevEventsLength = evts.length;\n    const dow = hd.getDay();\n    const isFriday = dow === FRI;\n    const isSaturday = dow === SAT;\n    let candlesEv;\n    const holidays = holidaysYear.get(hd.toString()) || [];\n    for (const ev of holidays) {\n      candlesEv = appendHolidayAndRelated(candlesEv, evts, ev, options, isFriday, isSaturday, hasUserMask);\n    }\n    if (options.sedrot && isSaturday) {\n      const parsha0 = sedra.lookup(abs);\n      if (!parsha0.chag) {\n        evts.push(new ParshaEvent(hd, parsha0.parsha, il, parsha0.num));\n      }\n    }\n    if (options.yizkor) {\n      const mm = hd.getMonth();\n      const dd = hd.getDate();\n      if (mm === months.TISHREI && (dd === 10 || dd === 22) || mm === NISAN && dd === (il ? 21 : 22) || mm === SIVAN && dd === (il ? 6 : 7)) {\n        const linkedEvent = holidays.filter(ev => ev.observedIn(il))[0];\n        const ev = new Event(hd, 'Yizkor', flags.YIZKOR, {\n          emoji: 'üïØÔ∏è',\n          linkedEvent\n        });\n        evts.push(ev);\n      }\n    }\n    const dailyLearning = options.dailyLearning;\n    if (typeof dailyLearning === 'object') {\n      const events = makeDailyLearning(hd, dailyLearning, il);\n      evts.push(...events);\n    }\n    if (options.omer && abs >= beginOmer && abs <= endOmer) {\n      const omer = abs - beginOmer + 1;\n      const omerEv = makeOmerEvent(hd, omer, options);\n      evts.push(omerEv);\n    }\n    if (isSaturday && (options.molad || options.shabbatMevarchim)) {\n      const events = makeMoladAndMevarchimChodesh(hd, options);\n      evts.push(...events);\n    }\n    if (!candlesEv && options.candlelighting && (isFriday || isSaturday)) {\n      candlesEv = makeCandleEvent(undefined, hd, options, isFriday, isSaturday);\n      if (isFriday && candlesEv && sedra) {\n        const parsha = sedra.lookup(abs);\n        const pe = new ParshaEvent(hd.next(), parsha.parsha, il, parsha.num);\n        candlesEv.memo = pe.render(options.locale);\n      }\n    }\n    // suppress Havdalah when options.havdalahMins=0 or options.havdalahDeg=0\n    if (candlesEv instanceof HavdalahEvent && (options.havdalahMins === 0 || options.havdalahDeg === 0)) {\n      candlesEv = undefined;\n    }\n    if (candlesEv) {\n      evts.push(candlesEv);\n    }\n    if (options.addHebrewDates || options.addHebrewDatesForEvents && prevEventsLength !== evts.length) {\n      const e2 = new HebrewDateEvent(hd);\n      if (prevEventsLength === evts.length) {\n        evts.push(e2);\n      } else {\n        evts.splice(prevEventsLength, 0, e2);\n      }\n    }\n  }\n  return evts;\n}\nconst FRI = 5;\nconst SAT = 6;\nconst NISAN = months.NISAN;\nconst SIVAN = months.SIVAN;\nconst ELUL = months.ELUL;\nconst LIGHT_CANDLES = flags.LIGHT_CANDLES;\nconst YOM_TOV_ENDS = flags.YOM_TOV_ENDS;\nconst CHUL_ONLY = flags.CHUL_ONLY;\nconst IL_ONLY = flags.IL_ONLY;\nconst LIGHT_CANDLES_TZEIS = flags.LIGHT_CANDLES_TZEIS;\nconst CHANUKAH_CANDLES = flags.CHANUKAH_CANDLES;\nconst MINOR_FAST = flags.MINOR_FAST;\nconst SPECIAL_SHABBAT = flags.SPECIAL_SHABBAT;\nconst MODERN_HOLIDAY = flags.MODERN_HOLIDAY;\nconst MAJOR_FAST = flags.MAJOR_FAST;\nconst ROSH_CHODESH = flags.ROSH_CHODESH;\nconst PARSHA_HASHAVUA = flags.PARSHA_HASHAVUA;\nconst DAF_YOMI = flags.DAF_YOMI;\nconst MISHNA_YOMI = flags.MISHNA_YOMI;\nconst NACH_YOMI = flags.NACH_YOMI;\nconst YERUSHALMI_YOMI = flags.YERUSHALMI_YOMI;\nconst OMER_COUNT = flags.OMER_COUNT;\nconst SHABBAT_MEVARCHIM = flags.SHABBAT_MEVARCHIM;\nconst MINOR_HOLIDAY = flags.MINOR_HOLIDAY;\nconst EREV = flags.EREV;\nconst CHOL_HAMOED = flags.CHOL_HAMOED;\nconst YOM_KIPPUR_KATAN = flags.YOM_KIPPUR_KATAN;\nconst YIZKOR = flags.YIZKOR;\nconst unrecognizedAlreadyWarned = new Set();\nconst RECOGNIZED_OPTIONS = {\n  location: 1,\n  year: 1,\n  isHebrewYear: 1,\n  month: 1,\n  numYears: 1,\n  start: 1,\n  end: 1,\n  candlelighting: 1,\n  candleLightingMins: 1,\n  havdalahMins: 1,\n  havdalahDeg: 1,\n  fastEndDeg: 1,\n  sedrot: 1,\n  il: 1,\n  noMinorFast: 1,\n  noModern: 1,\n  shabbatMevarchim: 1,\n  noRoshChodesh: 1,\n  noSpecialShabbat: 1,\n  noHolidays: 1,\n  omer: 1,\n  molad: 1,\n  ashkenazi: 1,\n  locale: 1,\n  addHebrewDates: 1,\n  addHebrewDatesForEvents: 1,\n  mask: 1,\n  yomKippurKatan: 1,\n  hour12: 1,\n  dailyLearning: 1,\n  useElevation: 1,\n  yizkor: 1\n};\n/**\n * @private\n */\nfunction warnUnrecognizedOptions(options) {\n  for (const k of Object.keys(options)) {\n    if (typeof RECOGNIZED_OPTIONS[k] === 'undefined' && !unrecognizedAlreadyWarned.has(k)) {\n      console.warn(`Ignoring unrecognized HebrewCalendar option: ${k}`);\n      unrecognizedAlreadyWarned.add(k);\n    }\n  }\n  if (options.dailyLearning) {\n    for (const k of Object.keys(options.dailyLearning)) {\n      if (!unrecognizedAlreadyWarned.has(k) && !DailyLearning.has(k)) {\n        console.warn(`Ignoring unrecognized DailyLearning calendar: ${k}`);\n        unrecognizedAlreadyWarned.add(k);\n      }\n    }\n  }\n}\nconst israelCityOffset = {\n  Jerusalem: 40,\n  Haifa: 30,\n  \"Zikhron Ya'aqov\": 30,\n  \"Zikhron Ya'akov\": 30,\n  'Zikhron Yaakov': 30,\n  \"Zichron Ya'akov\": 30,\n  'Zichron Yaakov': 30\n};\nconst geoIdCandleOffset = {\n  '281184': 40,\n  // Jerusalem\n  '294801': 30,\n  // Haifa\n  '293067': 30 // Zikhron Yaakov\n};\n/**\n * @private\n * @constant\n * This calculation is based on the position of the sun 36 minutes after sunset in Jerusalem\n * around the equinox / equilux, which is 8.5¬∞ below geometric zenith.\n * The Ohr Meir considers this the time that 3 small stars are visible,\n * which is later than the required 3 medium stars.\n * @see {https://kosherjava.com/zmanim/docs/api/com/kosherjava/zmanim/ZmanimCalendar.html#ZENITH_8_POINT_5}\n */\nconst TZEIT_3SMALL_STARS = 8.5;\n/**\n * @private\n * @constant\n * This calculation is based on observation of 3 medium sized stars by Dr. Baruch Cohen\n * in his calendar published in in 1899 in Strasbourg, France.\n * This calculates to 7.0833333¬∞ below geometric zenith.\n * @see {https://kosherjava.com/zmanim/docs/api/com/kosherjava/zmanim/ComplexZmanimCalendar.html#ZENITH_7_POINT_083}\n */\nconst TZEIT_3MEDIUM_STARS = 7.0833333;\n/**\n * Modifies options in-place\n * @private\n */\nfunction checkCandleOptions(options) {\n  if (!options.candlelighting) {\n    return;\n  }\n  const location = options.location;\n  if (typeof location === 'undefined' || !(location instanceof Location)) {\n    throw new TypeError('options.candlelighting requires valid options.location');\n  }\n  if (typeof options.havdalahMins === 'number' && typeof options.havdalahDeg === 'number') {\n    throw new TypeError('options.havdalahMins and options.havdalahDeg are mutually exclusive');\n  }\n  const min0 = options.candleLightingMins;\n  let min = typeof min0 === 'number' && !isNaN(min0) ? Math.trunc(min0) : 18;\n  if (location.getIsrael() && Math.abs(min) === 18) {\n    min = overrideIsraelCandleMins(location, min);\n  }\n  options.candleLightingMins = -1 * Math.abs(min);\n  if (typeof options.havdalahMins === 'number') {\n    options.havdalahMins = Math.trunc(Math.abs(options.havdalahMins));\n  } else if (typeof options.havdalahDeg === 'number') {\n    options.havdalahDeg = Math.abs(options.havdalahDeg);\n  } else {\n    options.havdalahDeg = TZEIT_3SMALL_STARS;\n  }\n  if (typeof options.fastEndDeg !== 'number') {\n    options.fastEndDeg = TZEIT_3MEDIUM_STARS;\n  }\n}\nfunction overrideIsraelCandleMins(location, min) {\n  const geoid = location.getGeoId();\n  if (geoid) {\n    const offset = geoIdCandleOffset[geoid];\n    if (typeof offset === 'number') {\n      return offset;\n    }\n  }\n  const shortName = location.getShortName();\n  if (shortName) {\n    const offset = israelCityOffset[shortName];\n    if (typeof offset === 'number') {\n      return offset;\n    }\n  }\n  return min;\n}\n/**\n * Mask to filter Holiday array\n * @private\n */\nfunction getMaskFromOptions(options) {\n  var _a;\n  if (typeof options.mask === 'number') {\n    return setOptionsFromMask(options);\n  }\n  const il = options.il || ((_a = options.location) === null || _a === undefined ? undefined : _a.getIsrael()) || false;\n  let mask = 0;\n  // default options\n  if (!options.noHolidays) {\n    mask |= ROSH_CHODESH | YOM_TOV_ENDS | MINOR_FAST | SPECIAL_SHABBAT | MODERN_HOLIDAY | MAJOR_FAST | MINOR_HOLIDAY | EREV | CHOL_HAMOED | LIGHT_CANDLES | LIGHT_CANDLES_TZEIS | CHANUKAH_CANDLES;\n  }\n  if (options.candlelighting) {\n    mask |= LIGHT_CANDLES | LIGHT_CANDLES_TZEIS | YOM_TOV_ENDS;\n  }\n  // suppression of defaults\n  if (options.noRoshChodesh) {\n    mask &= ~ROSH_CHODESH;\n  }\n  if (options.noModern) {\n    mask &= ~MODERN_HOLIDAY;\n  }\n  if (options.noMinorFast) {\n    mask &= ~MINOR_FAST;\n  }\n  if (options.noSpecialShabbat) {\n    mask &= ~SPECIAL_SHABBAT;\n    mask &= ~SHABBAT_MEVARCHIM;\n  }\n  if (il) {\n    mask |= IL_ONLY;\n  } else {\n    mask |= CHUL_ONLY;\n  }\n  // non-default options\n  if (options.sedrot) {\n    mask |= PARSHA_HASHAVUA;\n  }\n  if (options.omer) {\n    mask |= OMER_COUNT;\n  }\n  if (options.shabbatMevarchim) {\n    mask |= SHABBAT_MEVARCHIM;\n  }\n  if (options.yomKippurKatan) {\n    mask |= YOM_KIPPUR_KATAN;\n  }\n  if (options.yizkor) {\n    mask |= YIZKOR;\n  }\n  if (options.dailyLearning) {\n    const dailyLearning = options.dailyLearning;\n    if (dailyLearning.dafYomi) {\n      mask |= DAF_YOMI;\n    }\n    if (dailyLearning.mishnaYomi) {\n      mask |= MISHNA_YOMI;\n    }\n    if (dailyLearning.nachYomi) {\n      mask |= NACH_YOMI;\n    }\n    if (dailyLearning.yerushalmi) {\n      mask |= YERUSHALMI_YOMI;\n    }\n  }\n  return mask;\n}\nconst MASK_LIGHT_CANDLES = LIGHT_CANDLES | LIGHT_CANDLES_TZEIS | CHANUKAH_CANDLES | YOM_TOV_ENDS;\nconst defaultLocation = new Location(0, 0, false, 'UTC');\n/**\n * @private\n */\nfunction setOptionsFromMask(options) {\n  const m = options.mask || 0;\n  if (m & ROSH_CHODESH) delete options.noRoshChodesh;\n  if (m & MODERN_HOLIDAY) delete options.noModern;\n  if (m & MINOR_FAST) delete options.noMinorFast;\n  if (m & SPECIAL_SHABBAT) delete options.noSpecialShabbat;\n  if (m & PARSHA_HASHAVUA) options.sedrot = true;\n  if (m & (DAF_YOMI | MISHNA_YOMI | NACH_YOMI | YERUSHALMI_YOMI)) {\n    options.dailyLearning = options.dailyLearning || {};\n    if (m & DAF_YOMI) {\n      options.dailyLearning.dafYomi = true;\n    }\n    if (m & MISHNA_YOMI) {\n      options.dailyLearning.mishnaYomi = true;\n    }\n    if (m & NACH_YOMI) {\n      options.dailyLearning.nachYomi = true;\n    }\n    if (m & YERUSHALMI_YOMI) {\n      options.dailyLearning.yerushalmi = 1;\n    }\n  }\n  if (m & OMER_COUNT) options.omer = true;\n  if (m & SHABBAT_MEVARCHIM) options.shabbatMevarchim = true;\n  if (m & YOM_KIPPUR_KATAN) options.yomKippurKatan = true;\n  if (m & YIZKOR) options.yizkor = true;\n  return m;\n}\n/**\n * Appends the Event `ev` to the `events` array. Also may add related\n * timed events like candle-lighting or fast start/end\n * @private\n */\nfunction appendHolidayAndRelated(candlesEv, events, ev, options, isFriday, isSaturday, hasUserMask) {\n  const il = options.il || false;\n  if (!ev.observedIn(il)) {\n    return candlesEv; // holiday isn't observed here; bail out early\n  }\n  const eFlags = ev.getFlags();\n  if (!options.yomKippurKatan && eFlags & YOM_KIPPUR_KATAN || options.noModern && eFlags & MODERN_HOLIDAY) {\n    return candlesEv; // bail out early\n  }\n  const isMajorFast = Boolean(eFlags & MAJOR_FAST);\n  const isMinorFast = Boolean(eFlags & MINOR_FAST);\n  let fastEv;\n  if (options.candlelighting && (isMajorFast || isMinorFast) && ev.getDesc() !== 'Yom Kippur') {\n    ev = fastEv = makeFastStartEnd(ev, options);\n    if (fastEv.startEvent && (isMajorFast || isMinorFast && !options.noMinorFast)) {\n      events.push(fastEv.startEvent);\n    }\n  }\n  if (eFlags & Number(options.mask) || !eFlags && !hasUserMask) {\n    if (options.candlelighting && eFlags & MASK_LIGHT_CANDLES) {\n      const hd = ev.getDate();\n      candlesEv = makeCandleEvent(ev, hd, options, isFriday, isSaturday);\n      if (eFlags & CHANUKAH_CANDLES && candlesEv && !options.noHolidays) {\n        // Replace Chanukah event with a clone that includes candle lighting time.\n        // For clarity, allow a \"duplicate\" candle lighting event to remain for Shabbat\n        const chanukahEv = makeWeekdayChanukahCandleLighting(ev, hd, options);\n        if (chanukahEv) {\n          if (isFriday || isSaturday) {\n            chanukahEv.eventTime = candlesEv.eventTime;\n            chanukahEv.eventTimeStr = candlesEv.eventTimeStr;\n          }\n          ev = chanukahEv;\n        }\n        candlesEv = undefined;\n      }\n    }\n    if (!options.noHolidays || options.yomKippurKatan && eFlags & YOM_KIPPUR_KATAN) {\n      events.push(ev); // the original event itself\n    }\n  }\n  if ((isMajorFast || isMinorFast && !options.noMinorFast) && fastEv && fastEv.endEvent) {\n    events.push(fastEv.endEvent);\n  }\n  return candlesEv;\n}\nfunction makeMoladAndMevarchimChodesh(hd, options) {\n  const evts = [];\n  const hmonth = hd.getMonth();\n  const hdate = hd.getDate();\n  if (hmonth !== ELUL && hdate >= 23 && hdate <= 29) {\n    const hyear = hd.getFullYear();\n    const monNext = hmonth === HDate.monthsInYear(hyear) ? NISAN : hmonth + 1;\n    if (options.molad) {\n      evts.push(new MoladEvent(hd, hyear, monNext, options));\n    }\n    if (options.shabbatMevarchim) {\n      const nextMonthName = HDate.getMonthName(monNext, hyear);\n      const molad = new Molad(hyear, monNext);\n      const memo = molad.render(options.locale || 'en', options);\n      evts.push(new MevarchimChodeshEvent(hd, nextMonthName, memo));\n    }\n  }\n  return evts;\n}\nfunction dailyLearningName(key, val) {\n  if (key === 'yerushalmi') {\n    return val === 2 ? 'yerushalmi-schottenstein' : 'yerushalmi-vilna';\n  }\n  return key;\n}\nfunction makeDailyLearning(hd, dailyLearning, il) {\n  const evts = [];\n  for (const [key, val] of Object.entries(dailyLearning)) {\n    if (val) {\n      const name = dailyLearningName(key, val);\n      const learningEv = DailyLearning.lookup(name, hd, il);\n      if (learningEv) {\n        evts.push(learningEv);\n      }\n    }\n  }\n  return evts;\n}\nfunction makeOmerEvent(hd, omerDay, options) {\n  const omerEv = new OmerEvent(hd, omerDay);\n  if (options.candlelighting) {\n    const location = options.location;\n    const zmanim = new Zmanim(location, hd.prev(), false);\n    const tzeit = zmanim.tzeit(7.0833);\n    if (!isNaN(tzeit.getTime())) {\n      omerEv.alarm = tzeit;\n    }\n  }\n  return omerEv;\n}\nexport { calendar };","map":{"version":3,"names":["calendar","options","Object","assign","checkCandleOptions","location","defaultLocation","il","getIsrael","hasUserMask","mask","getMaskFromOptions","ashkenazi","locale","TypeError","translationObj","Locale","useLocale","evts","sedra","holidaysYear","beginOmer","endOmer","currentYear","startAndEnd","getStartAndEnd","warnUnrecognizedOptions","startAbs","endAbs","startGreg","abs2greg","getFullYear","candlelighting","abs","hd","HDate","hyear","getHolidaysForYear_","sedrot","getSedra","omer","hebrew2abs","NISAN","SIVAN","prevEventsLength","length","dow","getDay","isFriday","FRI","isSaturday","SAT","candlesEv","holidays","get","toString","ev","appendHolidayAndRelated","parsha0","lookup","chag","push","ParshaEvent","parsha","num","yizkor","mm","getMonth","dd","getDate","months","TISHREI","linkedEvent","filter","observedIn","Event","flags","YIZKOR","emoji","dailyLearning","events","makeDailyLearning","omerEv","makeOmerEvent","molad","shabbatMevarchim","makeMoladAndMevarchimChodesh","makeCandleEvent","undefined","pe","next","memo","render","HavdalahEvent","havdalahMins","havdalahDeg","addHebrewDates","addHebrewDatesForEvents","e2","HebrewDateEvent","splice","ELUL","LIGHT_CANDLES","YOM_TOV_ENDS","CHUL_ONLY","IL_ONLY","LIGHT_CANDLES_TZEIS","CHANUKAH_CANDLES","MINOR_FAST","SPECIAL_SHABBAT","MODERN_HOLIDAY","MAJOR_FAST","ROSH_CHODESH","PARSHA_HASHAVUA","DAF_YOMI","MISHNA_YOMI","NACH_YOMI","YERUSHALMI_YOMI","OMER_COUNT","SHABBAT_MEVARCHIM","MINOR_HOLIDAY","EREV","CHOL_HAMOED","YOM_KIPPUR_KATAN","unrecognizedAlreadyWarned","Set","RECOGNIZED_OPTIONS","year","isHebrewYear","month","numYears","start","end","candleLightingMins","fastEndDeg","noMinorFast","noModern","noRoshChodesh","noSpecialShabbat","noHolidays","yomKippurKatan","hour12","useElevation","k","keys","has","console","warn","add","DailyLearning","israelCityOffset","Jerusalem","Haifa","geoIdCandleOffset","TZEIT_3SMALL_STARS","TZEIT_3MEDIUM_STARS","Location","min0","min","isNaN","Math","trunc","overrideIsraelCandleMins","geoid","getGeoId","offset","shortName","getShortName","setOptionsFromMask","_a","dafYomi","mishnaYomi","nachYomi","yerushalmi","MASK_LIGHT_CANDLES","m","eFlags","getFlags","isMajorFast","Boolean","isMinorFast","fastEv","getDesc","makeFastStartEnd","startEvent","Number","chanukahEv","makeWeekdayChanukahCandleLighting","eventTime","eventTimeStr","endEvent","hmonth","hdate","monNext","monthsInYear","MoladEvent","nextMonthName","getMonthName","Molad","MevarchimChodeshEvent","dailyLearningName","key","val","entries","name","learningEv","omerDay","OmerEvent","zmanim","Zmanim","prev","tzeit","getTime","alarm"],"sources":["/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/node_modules/@hebcal/src/calendar.ts"],"sourcesContent":["import {Locale} from './locale';\nimport {abs2greg, HDate, months} from '@hebcal/hdate';\nimport {CalOptions, DailyLearningValue} from './CalOptions';\nimport {\n  makeCandleEvent,\n  makeFastStartEnd,\n  makeWeekdayChanukahCandleLighting,\n} from './candles';\nimport {Event, flags} from './event';\nimport {getStartAndEnd} from './getStartAndEnd';\nimport {HebrewDateEvent} from './HebrewDateEvent';\nimport {HolidayYearMap, getHolidaysForYear_} from './holidays';\nimport {ParshaEvent} from './ParshaEvent';\nimport {Sedra, getSedra} from './sedra';\nimport {TimedEvent, HavdalahEvent} from './TimedEvent';\nimport {DailyLearning} from './DailyLearning';\nimport {HolidayEvent} from './HolidayEvent';\nimport {MevarchimChodeshEvent} from './MevarchimChodeshEvent';\nimport {MoladEvent, Molad} from './molad';\nimport {OmerEvent} from './omer';\nimport {Zmanim} from './zmanim';\nimport {Location} from './location';\n\n/**\n * Calculates holidays and other Hebrew calendar events based on {@link CalOptions}.\n *\n * Each holiday is represented by an {@link Event} object which includes a date,\n * a description, flags and optional attributes.\n * If given no options, returns holidays for the Diaspora for the current Gregorian year.\n *\n * The date range returned by this function can be controlled by:\n * * `options.year` - Gregorian (e.g. 1993) or Hebrew year (e.g. 5749)\n * * `options.isHebrewYear` - to interpret `year` as Hebrew year\n * * `options.numYears` - generate calendar for multiple years (default 1)\n * * `options.month` - Gregorian or Hebrew month (to filter results to a single month)\n *\n * Alternatively, specify start and end days with `Date` or {@link HDate} instances:\n * * `options.start` - use specific start date (requires `end` date)\n * * `options.end` - use specific end date (requires `start` date)\n *\n * Unless `options.noHolidays == true`, default holidays include:\n * * Major holidays - Rosh Hashana, Yom Kippur, Pesach, Sukkot, etc.\n * * Minor holidays - Purim, Chanukah, Tu BiShvat, Lag BaOmer, etc.\n * * Minor fasts - Ta'anit Esther, Tzom Gedaliah, etc. (unless `options.noMinorFast`)\n * * Special Shabbatot - Shabbat Shekalim, Zachor, etc. (unless `options.noSpecialShabbat`)\n * * Modern Holidays - Yom HaShoah, Yom HaAtzma'ut, etc. (unless `options.noModern`)\n * * Rosh Chodesh (unless `options.noRoshChodesh`)\n *\n * Holiday and Torah reading schedules differ between Israel and the Disapora.\n * Set `options.il=true` to use the Israeli schedule.\n *\n * Additional non-default event types can be specified:\n * * Parashat HaShavua - weekly Torah Reading on Saturdays (`options.sedrot`)\n * * Counting of the Omer (`options.omer`)\n * * Shabbat Mevarchim HaChodesh on Saturday before Rosh Chodesh (`options.shabbatMevarchim`)\n * * Molad announcement on Saturday before Rosh Chodesh (`options.molad`)\n * * Yom Kippur Katan (`options.yomKippurKatan`)\n * * Yizkor (`options.yizkor`)\n *\n * Daily Study of texts are supported by the\n * {@link https://github.com/hebcal/hebcal-learning @hebcal/learning} package,\n * for example:\n * * Babylonian Talmud Daf Yomi (`options.dailyLearning.dafYomi`)\n * * Jerusalem Talmud (Yerushalmi) Yomi (`options.dailyLearning.yerushalmi`)\n * * Mishna Yomi (`options.dailyLearning.mishnaYomi`)\n * * Nach Yomi (`options.dailyLearning.nachYomi`)\n *\n * Candle-lighting and Havdalah times are approximated using latitude and longitude\n * specified by the {@link Location} class. The `Location` class contains a small\n * database of cities with their associated geographic information and time-zone information.\n * If you ever have any doubts about Hebcal's times, consult your local halachic authority.\n * If you enter geographic coordinates above the arctic circle or antarctic circle,\n * the times are guaranteed to be wrong.\n *\n * To add candle-lighting options, set `options.candlelighting=true` and set\n * `options.location` to an instance of `Location`. By default, candle lighting\n * time is 18 minutes before sundown (40 minutes for Jerusalem,\n * 30 minutes for Haifa and Zikhron Ya'akov) and Havdalah is\n * calculated according to Tzeit Hakochavim - Nightfall (the point when 3 small stars\n * are observable in the night time sky with the naked eye). The default Havdalah\n * option (Tzeit Hakochavim) is calculated when the sun is 8.5¬∞ below the horizon.\n * These defaults can be changed using these options:\n * * `options.candleLightingMins` - minutes before sundown to light candles\n * * `options.havdalahMins` - minutes after sundown for Havdalah (typical values are 42, 50, or 72).\n *    Havdalah times are suppressed when `options.havdalahMins=0`.\n * * `options.havdalahDeg` - degrees for solar depression for Havdalah.\n *    Default is 8.5 degrees for 3 small stars. Use 7.083 degrees for 3 medium-sized stars.\n *    Havdalah times are suppressed when `options.havdalahDeg=0`.\n *\n * If both `options.candlelighting=true` and `options.location` is specified,\n * Chanukah candle-lighting times and minor fast start/end times will also be generated.\n * Chanukah candle-lighting is at Bein HaShmashos (13.5 minutes before\n * the sun is 7.083¬∞ below the horizon in the evening)\n * on weekdays, at regular candle-lighting time on Fridays, and at regular Havdalah time on\n * Saturday night (see above).\n *\n * Minor fasts begin at Alot HaShachar (sun is 16.1¬∞ below the horizon in the morning) and\n * end when 3 medium-sized stars are observable in the night sky (sun is 7.083¬∞ below the horizon\n * in the evening).\n *\n * Two options also exist for generating an Event with the Hebrew date:\n * * `options.addHebrewDates` - print the Hebrew date for the entire date range\n * * `options.addHebrewDatesForEvents` - print the Hebrew date for dates with some events\n *\n * Lastly, translation and transliteration of event titles is controlled by\n * `options.locale` and the {@link Locale} API.\n * `@hebcal/core` supports three locales by default:\n * * `en` - default, Sephardic transliterations (e.g. \"Shabbat\")\n * * `ashkenazi` - Ashkenazi transliterations (e.g. \"Shabbos\")\n * * `he` - Hebrew (e.g. \"◊©÷∑◊Å◊ë÷∏÷º◊™\")\n *\n * Additional locales (such as `ru` or `fr`) are supported by the\n * {@link https://github.com/hebcal/hebcal-locales @hebcal/locales} package\n *\n * @example\n * import {HebrewCalendar, HDate, Location, Event} from '@hebcal/core';\n * const options: CalOptions = {\n *   year: 1981,\n *   isHebrewYear: false,\n *   candlelighting: true,\n *   location: Location.lookup('San Francisco'),\n *   sedrot: true,\n *   omer: true,\n * };\n * const events = HebrewCalendar.calendar(options);\n * for (const ev of events) {\n *   const hd = ev.getDate();\n *   const date = hd.greg();\n *   console.log(date.toLocaleDateString(), ev.render('en'), hd.toString());\n * }\n */\nexport function calendar(options: CalOptions = {}): Event[] {\n  options = {...options}; // so we can modify freely\n  checkCandleOptions(options);\n  const location = (options.location = options.location || defaultLocation);\n  const il = (options.il = options.il || location.getIsrael() || false);\n  const hasUserMask = typeof options.mask === 'number';\n  options.mask = getMaskFromOptions(options);\n  if (options.ashkenazi || options.locale) {\n    if (options.locale && typeof options.locale !== 'string') {\n      throw new TypeError(`Invalid options.locale: ${options.locale}`);\n    }\n    const locale = options.ashkenazi ? 'ashkenazi' : (options.locale as string);\n    const translationObj = Locale.useLocale(locale);\n    if (!translationObj) {\n      throw new TypeError(\n        `Locale '${locale}' not found; did you forget to import @hebcal/locales?`\n      );\n    }\n  } else {\n    Locale.useLocale('en');\n  }\n\n  const evts: Event[] = [];\n  let sedra: Sedra | undefined;\n  let holidaysYear: HolidayYearMap | undefined;\n  let beginOmer = -1;\n  let endOmer = -1;\n  let currentYear = -1;\n  const startAndEnd = getStartAndEnd(options);\n  warnUnrecognizedOptions(options);\n  const startAbs = startAndEnd[0];\n  const endAbs = startAndEnd[1];\n  const startGreg = abs2greg(startAbs);\n  if (startGreg.getFullYear() < 100) {\n    options.candlelighting = false;\n  }\n  for (let abs = startAbs; abs <= endAbs; abs++) {\n    const hd = new HDate(abs);\n    const hyear = hd.getFullYear();\n    if (hyear !== currentYear) {\n      currentYear = hyear;\n      holidaysYear = getHolidaysForYear_(currentYear);\n      if (options.sedrot) {\n        sedra = getSedra(currentYear, il);\n      }\n      if (options.omer) {\n        beginOmer = HDate.hebrew2abs(currentYear, NISAN, 16);\n        endOmer = HDate.hebrew2abs(currentYear, SIVAN, 5);\n      }\n    }\n    const prevEventsLength = evts.length;\n    const dow = hd.getDay();\n    const isFriday = dow === FRI;\n    const isSaturday = dow === SAT;\n    let candlesEv: TimedEvent | undefined;\n    const holidays = holidaysYear!.get(hd.toString()) || [];\n    for (const ev of holidays) {\n      candlesEv = appendHolidayAndRelated(\n        candlesEv,\n        evts,\n        ev,\n        options,\n        isFriday,\n        isSaturday,\n        hasUserMask\n      );\n    }\n    if (options.sedrot && isSaturday) {\n      const parsha0 = sedra!.lookup(abs);\n      if (!parsha0.chag) {\n        evts.push(new ParshaEvent(hd, parsha0.parsha, il, parsha0.num));\n      }\n    }\n    if (options.yizkor) {\n      const mm = hd.getMonth();\n      const dd = hd.getDate();\n      if (\n        (mm === months.TISHREI && (dd === 10 || dd === 22)) ||\n        (mm === NISAN && dd === (il ? 21 : 22)) ||\n        (mm === SIVAN && dd === (il ? 6 : 7))\n      ) {\n        const linkedEvent = holidays.filter(ev => ev.observedIn(il))[0];\n        const ev = new Event(hd, 'Yizkor', flags.YIZKOR, {\n          emoji: 'üïØÔ∏è',\n          linkedEvent,\n        });\n        evts.push(ev);\n      }\n    }\n    const dailyLearning = options.dailyLearning;\n    if (typeof dailyLearning === 'object') {\n      const events = makeDailyLearning(hd, dailyLearning, il);\n      evts.push(...events);\n    }\n    if (options.omer && abs >= beginOmer && abs <= endOmer) {\n      const omer = abs - beginOmer + 1;\n      const omerEv = makeOmerEvent(hd, omer, options);\n      evts.push(omerEv);\n    }\n    if (isSaturday && (options.molad || options.shabbatMevarchim)) {\n      const events = makeMoladAndMevarchimChodesh(hd, options);\n      evts.push(...events);\n    }\n    if (!candlesEv && options.candlelighting && (isFriday || isSaturday)) {\n      candlesEv = makeCandleEvent(undefined, hd, options, isFriday, isSaturday);\n      if (isFriday && candlesEv && sedra) {\n        const parsha = sedra.lookup(abs);\n        const pe = new ParshaEvent(hd.next(), parsha.parsha, il, parsha.num);\n        candlesEv.memo = pe.render(options.locale);\n      }\n    }\n    // suppress Havdalah when options.havdalahMins=0 or options.havdalahDeg=0\n    if (\n      candlesEv instanceof HavdalahEvent &&\n      (options.havdalahMins === 0 || options.havdalahDeg === 0)\n    ) {\n      candlesEv = undefined;\n    }\n    if (candlesEv) {\n      evts.push(candlesEv);\n    }\n    if (\n      options.addHebrewDates ||\n      (options.addHebrewDatesForEvents && prevEventsLength !== evts.length)\n    ) {\n      const e2 = new HebrewDateEvent(hd);\n      if (prevEventsLength === evts.length) {\n        evts.push(e2);\n      } else {\n        evts.splice(prevEventsLength, 0, e2);\n      }\n    }\n  }\n  return evts;\n}\n\nconst FRI = 5;\nconst SAT = 6;\n\nconst NISAN = months.NISAN;\nconst SIVAN = months.SIVAN;\nconst ELUL = months.ELUL;\n\nconst LIGHT_CANDLES = flags.LIGHT_CANDLES;\nconst YOM_TOV_ENDS = flags.YOM_TOV_ENDS;\nconst CHUL_ONLY = flags.CHUL_ONLY;\nconst IL_ONLY = flags.IL_ONLY;\nconst LIGHT_CANDLES_TZEIS = flags.LIGHT_CANDLES_TZEIS;\nconst CHANUKAH_CANDLES = flags.CHANUKAH_CANDLES;\nconst MINOR_FAST = flags.MINOR_FAST;\nconst SPECIAL_SHABBAT = flags.SPECIAL_SHABBAT;\nconst MODERN_HOLIDAY = flags.MODERN_HOLIDAY;\nconst MAJOR_FAST = flags.MAJOR_FAST;\nconst ROSH_CHODESH = flags.ROSH_CHODESH;\nconst PARSHA_HASHAVUA = flags.PARSHA_HASHAVUA;\nconst DAF_YOMI = flags.DAF_YOMI;\nconst MISHNA_YOMI = flags.MISHNA_YOMI;\nconst NACH_YOMI = flags.NACH_YOMI;\nconst YERUSHALMI_YOMI = flags.YERUSHALMI_YOMI;\nconst OMER_COUNT = flags.OMER_COUNT;\nconst SHABBAT_MEVARCHIM = flags.SHABBAT_MEVARCHIM;\nconst MINOR_HOLIDAY = flags.MINOR_HOLIDAY;\nconst EREV = flags.EREV;\nconst CHOL_HAMOED = flags.CHOL_HAMOED;\nconst YOM_KIPPUR_KATAN = flags.YOM_KIPPUR_KATAN;\nconst YIZKOR = flags.YIZKOR;\n\ntype StringIntMap = Record<string, number>;\n\nconst unrecognizedAlreadyWarned = new Set<string>();\nconst RECOGNIZED_OPTIONS: StringIntMap = {\n  location: 1,\n  year: 1,\n  isHebrewYear: 1,\n  month: 1,\n  numYears: 1,\n  start: 1,\n  end: 1,\n  candlelighting: 1,\n  candleLightingMins: 1,\n  havdalahMins: 1,\n  havdalahDeg: 1,\n  fastEndDeg: 1,\n  sedrot: 1,\n  il: 1,\n  noMinorFast: 1,\n  noModern: 1,\n  shabbatMevarchim: 1,\n  noRoshChodesh: 1,\n  noSpecialShabbat: 1,\n  noHolidays: 1,\n  omer: 1,\n  molad: 1,\n  ashkenazi: 1,\n  locale: 1,\n  addHebrewDates: 1,\n  addHebrewDatesForEvents: 1,\n  mask: 1,\n  yomKippurKatan: 1,\n  hour12: 1,\n  dailyLearning: 1,\n  useElevation: 1,\n  yizkor: 1,\n} as const satisfies Record<keyof CalOptions, 1>;\n\n/**\n * @private\n */\nfunction warnUnrecognizedOptions(options: CalOptions) {\n  for (const k of Object.keys(options)) {\n    if (\n      typeof RECOGNIZED_OPTIONS[k] === 'undefined' &&\n      !unrecognizedAlreadyWarned.has(k)\n    ) {\n      console.warn(`Ignoring unrecognized HebrewCalendar option: ${k}`);\n      unrecognizedAlreadyWarned.add(k);\n    }\n  }\n  if (options.dailyLearning) {\n    for (const k of Object.keys(options.dailyLearning)) {\n      if (!unrecognizedAlreadyWarned.has(k) && !DailyLearning.has(k)) {\n        console.warn(`Ignoring unrecognized DailyLearning calendar: ${k}`);\n        unrecognizedAlreadyWarned.add(k);\n      }\n    }\n  }\n}\n\nconst israelCityOffset: StringIntMap = {\n  Jerusalem: 40,\n  Haifa: 30,\n  \"Zikhron Ya'aqov\": 30,\n  \"Zikhron Ya'akov\": 30,\n  'Zikhron Yaakov': 30,\n  \"Zichron Ya'akov\": 30,\n  'Zichron Yaakov': 30,\n} as const;\n\nconst geoIdCandleOffset: StringIntMap = {\n  '281184': 40, // Jerusalem\n  '294801': 30, // Haifa\n  '293067': 30, // Zikhron Yaakov\n} as const;\n\n/**\n * @private\n * @constant\n * This calculation is based on the position of the sun 36 minutes after sunset in Jerusalem\n * around the equinox / equilux, which is 8.5¬∞ below geometric zenith.\n * The Ohr Meir considers this the time that 3 small stars are visible,\n * which is later than the required 3 medium stars.\n * @see {https://kosherjava.com/zmanim/docs/api/com/kosherjava/zmanim/ZmanimCalendar.html#ZENITH_8_POINT_5}\n */\nconst TZEIT_3SMALL_STARS = 8.5;\n\n/**\n * @private\n * @constant\n * This calculation is based on observation of 3 medium sized stars by Dr. Baruch Cohen\n * in his calendar published in in 1899 in Strasbourg, France.\n * This calculates to 7.0833333¬∞ below geometric zenith.\n * @see {https://kosherjava.com/zmanim/docs/api/com/kosherjava/zmanim/ComplexZmanimCalendar.html#ZENITH_7_POINT_083}\n */\nconst TZEIT_3MEDIUM_STARS = 7.0833333;\n\n/**\n * Modifies options in-place\n * @private\n */\nfunction checkCandleOptions(options: CalOptions) {\n  if (!options.candlelighting) {\n    return;\n  }\n  const location = options.location;\n  if (typeof location === 'undefined' || !(location instanceof Location)) {\n    throw new TypeError(\n      'options.candlelighting requires valid options.location'\n    );\n  }\n  if (\n    typeof options.havdalahMins === 'number' &&\n    typeof options.havdalahDeg === 'number'\n  ) {\n    throw new TypeError(\n      'options.havdalahMins and options.havdalahDeg are mutually exclusive'\n    );\n  }\n\n  const min0 = options.candleLightingMins;\n  let min = typeof min0 === 'number' && !isNaN(min0) ? Math.trunc(min0) : 18;\n  if (location.getIsrael() && Math.abs(min) === 18) {\n    min = overrideIsraelCandleMins(location, min);\n  }\n  options.candleLightingMins = -1 * Math.abs(min);\n\n  if (typeof options.havdalahMins === 'number') {\n    options.havdalahMins = Math.trunc(Math.abs(options.havdalahMins));\n  } else if (typeof options.havdalahDeg === 'number') {\n    options.havdalahDeg = Math.abs(options.havdalahDeg);\n  } else {\n    options.havdalahDeg = TZEIT_3SMALL_STARS;\n  }\n  if (typeof options.fastEndDeg !== 'number') {\n    options.fastEndDeg = TZEIT_3MEDIUM_STARS;\n  }\n}\n\nfunction overrideIsraelCandleMins(location: Location, min: number) {\n  const geoid = location.getGeoId();\n  if (geoid) {\n    const offset = geoIdCandleOffset[geoid];\n    if (typeof offset === 'number') {\n      return offset;\n    }\n  }\n  const shortName = location.getShortName();\n  if (shortName) {\n    const offset = israelCityOffset[shortName];\n    if (typeof offset === 'number') {\n      return offset;\n    }\n  }\n  return min;\n}\n\n/**\n * Mask to filter Holiday array\n * @private\n */\nfunction getMaskFromOptions(options: CalOptions): number {\n  if (typeof options.mask === 'number') {\n    return setOptionsFromMask(options);\n  }\n  const il = options.il || options.location?.getIsrael() || false;\n  let mask = 0;\n\n  // default options\n  if (!options.noHolidays) {\n    mask |=\n      ROSH_CHODESH |\n      YOM_TOV_ENDS |\n      MINOR_FAST |\n      SPECIAL_SHABBAT |\n      MODERN_HOLIDAY |\n      MAJOR_FAST |\n      MINOR_HOLIDAY |\n      EREV |\n      CHOL_HAMOED |\n      LIGHT_CANDLES |\n      LIGHT_CANDLES_TZEIS |\n      CHANUKAH_CANDLES;\n  }\n  if (options.candlelighting) {\n    mask |= LIGHT_CANDLES | LIGHT_CANDLES_TZEIS | YOM_TOV_ENDS;\n  }\n  // suppression of defaults\n  if (options.noRoshChodesh) {\n    mask &= ~ROSH_CHODESH;\n  }\n  if (options.noModern) {\n    mask &= ~MODERN_HOLIDAY;\n  }\n  if (options.noMinorFast) {\n    mask &= ~MINOR_FAST;\n  }\n  if (options.noSpecialShabbat) {\n    mask &= ~SPECIAL_SHABBAT;\n    mask &= ~SHABBAT_MEVARCHIM;\n  }\n  if (il) {\n    mask |= IL_ONLY;\n  } else {\n    mask |= CHUL_ONLY;\n  }\n  // non-default options\n  if (options.sedrot) {\n    mask |= PARSHA_HASHAVUA;\n  }\n  if (options.omer) {\n    mask |= OMER_COUNT;\n  }\n  if (options.shabbatMevarchim) {\n    mask |= SHABBAT_MEVARCHIM;\n  }\n  if (options.yomKippurKatan) {\n    mask |= YOM_KIPPUR_KATAN;\n  }\n  if (options.yizkor) {\n    mask |= YIZKOR;\n  }\n  if (options.dailyLearning) {\n    const dailyLearning = options.dailyLearning;\n    if (dailyLearning.dafYomi) {\n      mask |= DAF_YOMI;\n    }\n    if (dailyLearning.mishnaYomi) {\n      mask |= MISHNA_YOMI;\n    }\n    if (dailyLearning.nachYomi) {\n      mask |= NACH_YOMI;\n    }\n    if (dailyLearning.yerushalmi) {\n      mask |= YERUSHALMI_YOMI;\n    }\n  }\n\n  return mask;\n}\n\nconst MASK_LIGHT_CANDLES =\n  LIGHT_CANDLES | LIGHT_CANDLES_TZEIS | CHANUKAH_CANDLES | YOM_TOV_ENDS;\n\nconst defaultLocation = new Location(0, 0, false, 'UTC');\n\n/**\n * @private\n */\nfunction setOptionsFromMask(options: CalOptions): number {\n  const m = options.mask || 0;\n  if (m & ROSH_CHODESH) delete options.noRoshChodesh;\n  if (m & MODERN_HOLIDAY) delete options.noModern;\n  if (m & MINOR_FAST) delete options.noMinorFast;\n  if (m & SPECIAL_SHABBAT) delete options.noSpecialShabbat;\n  if (m & PARSHA_HASHAVUA) options.sedrot = true;\n  if (m & (DAF_YOMI | MISHNA_YOMI | NACH_YOMI | YERUSHALMI_YOMI)) {\n    options.dailyLearning = options.dailyLearning || {};\n    if (m & DAF_YOMI) {\n      options.dailyLearning.dafYomi = true;\n    }\n    if (m & MISHNA_YOMI) {\n      options.dailyLearning.mishnaYomi = true;\n    }\n    if (m & NACH_YOMI) {\n      options.dailyLearning.nachYomi = true;\n    }\n    if (m & YERUSHALMI_YOMI) {\n      options.dailyLearning.yerushalmi = 1;\n    }\n  }\n  if (m & OMER_COUNT) options.omer = true;\n  if (m & SHABBAT_MEVARCHIM) options.shabbatMevarchim = true;\n  if (m & YOM_KIPPUR_KATAN) options.yomKippurKatan = true;\n  if (m & YIZKOR) options.yizkor = true;\n  return m;\n}\n\n/**\n * Appends the Event `ev` to the `events` array. Also may add related\n * timed events like candle-lighting or fast start/end\n * @private\n */\nfunction appendHolidayAndRelated(\n  candlesEv: TimedEvent | undefined,\n  events: Event[],\n  ev: HolidayEvent,\n  options: CalOptions,\n  isFriday: boolean,\n  isSaturday: boolean,\n  hasUserMask: boolean\n): TimedEvent | undefined {\n  const il = options.il || false;\n  if (!ev.observedIn(il)) {\n    return candlesEv; // holiday isn't observed here; bail out early\n  }\n  const eFlags = ev.getFlags();\n  if (\n    (!options.yomKippurKatan && eFlags & YOM_KIPPUR_KATAN) ||\n    (options.noModern && eFlags & MODERN_HOLIDAY)\n  ) {\n    return candlesEv; // bail out early\n  }\n  const isMajorFast = Boolean(eFlags & MAJOR_FAST);\n  const isMinorFast = Boolean(eFlags & MINOR_FAST);\n  let fastEv;\n  if (\n    options.candlelighting &&\n    (isMajorFast || isMinorFast) &&\n    ev.getDesc() !== 'Yom Kippur'\n  ) {\n    ev = fastEv = makeFastStartEnd(ev, options);\n    if (\n      fastEv.startEvent &&\n      (isMajorFast || (isMinorFast && !options.noMinorFast))\n    ) {\n      events.push(fastEv.startEvent);\n    }\n  }\n  if (eFlags & Number(options.mask) || (!eFlags && !hasUserMask)) {\n    if (options.candlelighting && eFlags & MASK_LIGHT_CANDLES) {\n      const hd = ev.getDate();\n      candlesEv = makeCandleEvent(ev, hd, options, isFriday, isSaturday);\n      if (eFlags & CHANUKAH_CANDLES && candlesEv && !options.noHolidays) {\n        // Replace Chanukah event with a clone that includes candle lighting time.\n        // For clarity, allow a \"duplicate\" candle lighting event to remain for Shabbat\n        const chanukahEv = makeWeekdayChanukahCandleLighting(ev, hd, options);\n        if (chanukahEv) {\n          if (isFriday || isSaturday) {\n            chanukahEv.eventTime = candlesEv.eventTime;\n            chanukahEv.eventTimeStr = candlesEv.eventTimeStr;\n          }\n          ev = chanukahEv;\n        }\n        candlesEv = undefined;\n      }\n    }\n    if (\n      !options.noHolidays ||\n      (options.yomKippurKatan && eFlags & YOM_KIPPUR_KATAN)\n    ) {\n      events.push(ev); // the original event itself\n    }\n  }\n  if (\n    (isMajorFast || (isMinorFast && !options.noMinorFast)) &&\n    fastEv &&\n    fastEv.endEvent\n  ) {\n    events.push(fastEv.endEvent);\n  }\n  return candlesEv;\n}\n\nfunction makeMoladAndMevarchimChodesh(hd: HDate, options: CalOptions): Event[] {\n  const evts: Event[] = [];\n  const hmonth = hd.getMonth();\n  const hdate = hd.getDate();\n  if (hmonth !== ELUL && hdate >= 23 && hdate <= 29) {\n    const hyear = hd.getFullYear();\n    const monNext = hmonth === HDate.monthsInYear(hyear) ? NISAN : hmonth + 1;\n    if (options.molad) {\n      evts.push(new MoladEvent(hd, hyear, monNext, options));\n    }\n    if (options.shabbatMevarchim) {\n      const nextMonthName = HDate.getMonthName(monNext, hyear);\n      const molad = new Molad(hyear, monNext);\n      const memo = molad.render(options.locale || 'en', options);\n      evts.push(new MevarchimChodeshEvent(hd, nextMonthName, memo));\n    }\n  }\n  return evts;\n}\n\nfunction dailyLearningName(key: string, val: DailyLearningValue): string {\n  if (key === 'yerushalmi') {\n    return val === 2 ? 'yerushalmi-schottenstein' : 'yerushalmi-vilna';\n  }\n  return key;\n}\n\nfunction makeDailyLearning(\n  hd: HDate,\n  dailyLearning: Record<string, DailyLearningValue>,\n  il: boolean\n): Event[] {\n  const evts: Event[] = [];\n  for (const [key, val] of Object.entries(dailyLearning)) {\n    if (val) {\n      const name = dailyLearningName(key, val);\n      const learningEv = DailyLearning.lookup(name, hd, il);\n      if (learningEv) {\n        evts.push(learningEv);\n      }\n    }\n  }\n  return evts;\n}\n\nfunction makeOmerEvent(hd: HDate, omerDay: number, options: CalOptions) {\n  const omerEv = new OmerEvent(hd, omerDay);\n  if (options.candlelighting) {\n    const location = options.location!;\n    const zmanim = new Zmanim(location, hd.prev(), false);\n    const tzeit = zmanim.tzeit(7.0833);\n    if (!isNaN(tzeit.getTime())) {\n      omerEv.alarm = tzeit;\n    }\n  }\n  return omerEv;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}