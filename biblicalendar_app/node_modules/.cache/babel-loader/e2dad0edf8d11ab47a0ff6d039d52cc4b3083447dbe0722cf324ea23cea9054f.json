{"ast":null,"code":"/*! @hebcal/core v5.9.0, distributed under GPLv2 https://www.gnu.org/licenses/gpl-2.0.txt */\nimport { Locale } from '@hebcal/hdate';\nimport { Event } from './event.js';\nimport { reformatTimeStr } from './reformatTimeStr.js';\nimport { Zmanim } from './zmanim.js';\nimport './locale.js';\n\n/** An event that has an `eventTime` and `eventTimeStr` */\nclass TimedEvent extends Event {\n  /**\n   * @param desc Description (not translated)\n   */\n  constructor(date, desc, mask, eventTime, location, linkedEvent, options) {\n    super(date, desc, mask);\n    this.eventTime = Zmanim.roundTime(eventTime);\n    this.location = location;\n    const timeFormat = location.getTimeFormatter();\n    this.eventTimeStr = Zmanim.formatTime(this.eventTime, timeFormat);\n    const opts = Object.assign(Object.assign({}, options), {\n      location\n    });\n    this.fmtTime = reformatTimeStr(this.eventTimeStr, 'pm', opts);\n    if (typeof linkedEvent !== 'undefined') {\n      this.linkedEvent = linkedEvent;\n    }\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale) {\n    return Locale.gettext(this.getDesc(), locale) + ': ' + this.fmtTime;\n  }\n  /**\n   * Returns translation of \"Candle lighting\" without the time.\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  renderBrief(locale) {\n    return Locale.gettext(this.getDesc(), locale);\n  }\n  getCategories() {\n    const desc = this.getDesc();\n    switch (desc) {\n      // LIGHT_CANDLES or LIGHT_CANDLES_TZEIS\n      case 'Candle lighting':\n        return ['candles'];\n      // YOM_TOV_ENDS\n      case 'Havdalah':\n        return ['havdalah'];\n      // flags.MINOR_FAST or flags.MAJOR_FAST\n      case 'Fast begins':\n      case 'Fast ends':\n        return ['zmanim', 'fast'];\n    }\n    /* NOTREACHED */\n    return ['unknown'];\n  }\n}\n/** Candle lighting before Shabbat or holiday */\nclass CandleLightingEvent extends TimedEvent {\n  constructor(date, mask, eventTime, location, linkedEvent, options) {\n    super(date, 'Candle lighting', mask, eventTime, location, linkedEvent, options);\n  }\n  getEmoji() {\n    return 'üïØÔ∏è';\n  }\n}\n/** Havdalah after Shabbat or holiday */\nclass HavdalahEvent extends TimedEvent {\n  constructor(date, mask, eventTime, location, havdalahMins, linkedEvent, options) {\n    super(date, 'Havdalah', mask, eventTime, location, linkedEvent, options);\n    if (havdalahMins) {\n      this.havdalahMins = havdalahMins;\n    }\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale) {\n    return this.renderBrief(locale) + ': ' + this.fmtTime;\n  }\n  /**\n   * Returns translation of \"Havdalah\" without the time.\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  renderBrief(locale) {\n    let str = Locale.gettext(this.getDesc(), locale);\n    if (this.havdalahMins) {\n      const min = Locale.gettext('min', locale);\n      str += ` (${this.havdalahMins} ${min})`;\n    }\n    return str;\n  }\n  getEmoji() {\n    return '‚ú®';\n  }\n}\nexport { CandleLightingEvent, HavdalahEvent, TimedEvent };","map":{"version":3,"names":["TimedEvent","Event","constructor","date","desc","mask","eventTime","location","linkedEvent","options","Zmanim","roundTime","timeFormat","getTimeFormatter","eventTimeStr","formatTime","opts","Object","assign","fmtTime","reformatTimeStr","render","locale","Locale","gettext","getDesc","renderBrief","getCategories","CandleLightingEvent","getEmoji","HavdalahEvent","havdalahMins","str","min"],"sources":["/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/node_modules/@hebcal/src/TimedEvent.ts"],"sourcesContent":["import {HDate, Locale} from '@hebcal/hdate';\nimport {CalOptions} from './CalOptions';\nimport {Location} from './location';\nimport {Event} from './event';\nimport {reformatTimeStr} from './reformatTimeStr';\nimport {Zmanim} from './zmanim';\nimport './locale'; // Adds Hebrew and Ashkenazic translations\n\n/** An event that has an `eventTime` and `eventTimeStr` */\nexport class TimedEvent extends Event {\n  readonly eventTime: Date;\n  readonly location: Location;\n  readonly eventTimeStr: string;\n  readonly fmtTime: string;\n  readonly linkedEvent?: Event;\n  /**\n   * @param desc Description (not translated)\n   */\n  constructor(\n    date: HDate,\n    desc: string,\n    mask: number,\n    eventTime: Date,\n    location: Location,\n    linkedEvent?: Event,\n    options?: CalOptions\n  ) {\n    super(date, desc, mask);\n    this.eventTime = Zmanim.roundTime(eventTime);\n    this.location = location;\n    const timeFormat = location.getTimeFormatter();\n    this.eventTimeStr = Zmanim.formatTime(this.eventTime, timeFormat);\n    const opts = {...options, location};\n    this.fmtTime = reformatTimeStr(this.eventTimeStr, 'pm', opts);\n    if (typeof linkedEvent !== 'undefined') {\n      this.linkedEvent = linkedEvent;\n    }\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale?: string): string {\n    return Locale.gettext(this.getDesc(), locale) + ': ' + this.fmtTime;\n  }\n  /**\n   * Returns translation of \"Candle lighting\" without the time.\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  renderBrief(locale?: string): string {\n    return Locale.gettext(this.getDesc(), locale);\n  }\n\n  getCategories(): string[] {\n    const desc = this.getDesc();\n    switch (desc) {\n      // LIGHT_CANDLES or LIGHT_CANDLES_TZEIS\n      case 'Candle lighting':\n        return ['candles'];\n      // YOM_TOV_ENDS\n      case 'Havdalah':\n        return ['havdalah'];\n      // flags.MINOR_FAST or flags.MAJOR_FAST\n      case 'Fast begins':\n      case 'Fast ends':\n        return ['zmanim', 'fast'];\n    }\n    /* NOTREACHED */\n    return ['unknown'];\n  }\n}\n\n/** Candle lighting before Shabbat or holiday */\nexport class CandleLightingEvent extends TimedEvent {\n  constructor(\n    date: HDate,\n    mask: number,\n    eventTime: Date,\n    location: Location,\n    linkedEvent?: Event,\n    options?: CalOptions\n  ) {\n    super(\n      date,\n      'Candle lighting',\n      mask,\n      eventTime,\n      location,\n      linkedEvent,\n      options\n    );\n  }\n\n  getEmoji(): string {\n    return 'üïØÔ∏è';\n  }\n}\n\n/** Havdalah after Shabbat or holiday */\nexport class HavdalahEvent extends TimedEvent {\n  private readonly havdalahMins?: number;\n  constructor(\n    date: HDate,\n    mask: number,\n    eventTime: Date,\n    location: Location,\n    havdalahMins?: number,\n    linkedEvent?: Event,\n    options?: CalOptions\n  ) {\n    super(date, 'Havdalah', mask, eventTime, location, linkedEvent, options);\n    if (havdalahMins) {\n      this.havdalahMins = havdalahMins;\n    }\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale?: string): string {\n    return this.renderBrief(locale) + ': ' + this.fmtTime;\n  }\n  /**\n   * Returns translation of \"Havdalah\" without the time.\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  renderBrief(locale?: string): string {\n    let str = Locale.gettext(this.getDesc(), locale);\n    if (this.havdalahMins) {\n      const min = Locale.gettext('min', locale);\n      str += ` (${this.havdalahMins} ${min})`;\n    }\n    return str;\n  }\n\n  getEmoji(): string {\n    return '‚ú®';\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}