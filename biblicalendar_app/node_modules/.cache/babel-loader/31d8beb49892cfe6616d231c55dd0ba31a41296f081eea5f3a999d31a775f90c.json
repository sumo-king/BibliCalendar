{"ast":null,"code":"var _jsxFileName = \"/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/src/calendar_controllers/lunar.controller.jsx\",\n  _s = $RefreshSig$();\nimport { Card } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Moon } from \"lunarphase-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LunarCal = ({\n  cardStyles\n}) => {\n  _s();\n  var _lunarDate$rawDay;\n  useEffect(() => {\n    const currentDate = new Date();\n    const moonPhase = Moon.lunarPhase(currentDate);\n    const moonDay = Moon.lunarAge();\n    const phaseEmoji = Moon.emojiForLunarPhase();\n\n    // Calculate lunar month since spring equinox\n    const lunarMonth = calculateLunarMonth(currentDate);\n    setLunarDate({\n      phase: moonPhase,\n      day: Math.floor(moonDay),\n      phaseEmoji: phaseEmoji,\n      rawDay: moonDay,\n      month: lunarMonth\n    });\n  }, []);\n\n  // Calculate which lunar month we're in since spring equinox\n  const calculateLunarMonth = currentDate => {\n    const year = currentDate.getFullYear();\n\n    // Spring equinox is typically March 19-21\n    // Using March 20 as approximation\n    const springEquinox = new Date(year, 2, 20); // Month is 0-indexed\n\n    // If we're before this year's equinox, use last year's\n    const equinoxDate = currentDate < springEquinox ? new Date(year - 1, 2, 20) : springEquinox;\n\n    // Average lunar cycle is 29.53 days\n    const daysSinceEquinox = (currentDate - equinoxDate) / (1000 * 60 * 60 * 24);\n    const lunarCycleLength = 29.53;\n\n    // Count how many complete lunar cycles have passed\n    const lunarMonth = Math.floor(daysSinceEquinox / lunarCycleLength) + 1;\n    return lunarMonth;\n  };\n  const [lunarDate, setLunarDate] = useState({\n    phase: '',\n    day: null,\n    phaseEmoji: null,\n    rawDay: null,\n    month: null\n  });\n  const isSabbath = day => {\n    if (day === 8 || day === 15 || day === 22 || day === 29) {\n      return \"Sabbath\";\n    }\n    return day;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    style: cardStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lunar Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lunar-phase\",\n      children: \"Phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: lunarDate.phaseEmoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: lunarDate.phase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lunar-month\",\n      children: \"Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: lunarDate.month || '?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"day\",\n      children: \"Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"day\",\n      children: isSabbath(lunarDate.day)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"raw\",\n      children: \"Raw Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"raw\",\n      children: (_lunarDate$rawDay = lunarDate.rawDay) === null || _lunarDate$rawDay === void 0 ? void 0 : _lunarDate$rawDay.toFixed(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(LunarCal, \"zZm6zCoPqmYkqGKujft8wbWoX40=\");\n_c = LunarCal;\nvar _c;\n$RefreshReg$(_c, \"LunarCal\");","map":{"version":3,"names":["Card","useEffect","useState","Moon","jsxDEV","_jsxDEV","LunarCal","cardStyles","_s","_lunarDate$rawDay","currentDate","Date","moonPhase","lunarPhase","moonDay","lunarAge","phaseEmoji","emojiForLunarPhase","lunarMonth","calculateLunarMonth","setLunarDate","phase","day","Math","floor","rawDay","month","year","getFullYear","springEquinox","equinoxDate","daysSinceEquinox","lunarCycleLength","lunarDate","isSabbath","variant","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","toFixed","_c","$RefreshReg$"],"sources":["/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/src/calendar_controllers/lunar.controller.jsx"],"sourcesContent":["import { Card } from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport { Moon } from \"lunarphase-js\";\n\nexport const LunarCal = ({cardStyles}) =>{\n\n    useEffect(()=>{\n        const currentDate = new Date();\n        const moonPhase = Moon.lunarPhase(currentDate);\n        const moonDay = Moon.lunarAge();\n        const phaseEmoji = Moon.emojiForLunarPhase();\n        \n        // Calculate lunar month since spring equinox\n        const lunarMonth = calculateLunarMonth(currentDate);\n  \n        setLunarDate({\n            phase: moonPhase, \n            day: Math.floor(moonDay), \n            phaseEmoji: phaseEmoji, \n            rawDay: moonDay,\n            month: lunarMonth\n        })\n    }, [])\n\n    // Calculate which lunar month we're in since spring equinox\n    const calculateLunarMonth = (currentDate) => {\n        const year = currentDate.getFullYear();\n        \n        // Spring equinox is typically March 19-21\n        // Using March 20 as approximation\n        const springEquinox = new Date(year, 2, 20); // Month is 0-indexed\n        \n        // If we're before this year's equinox, use last year's\n        const equinoxDate = currentDate < springEquinox \n            ? new Date(year - 1, 2, 20)\n            : springEquinox;\n        \n        // Average lunar cycle is 29.53 days\n        const daysSinceEquinox = (currentDate - equinoxDate) / (1000 * 60 * 60 * 24);\n        const lunarCycleLength = 29.53;\n        \n        // Count how many complete lunar cycles have passed\n        const lunarMonth = Math.floor(daysSinceEquinox / lunarCycleLength) + 1;\n        \n        return lunarMonth;\n    }\n\n    const [lunarDate, setLunarDate] = useState({\n        phase: '', \n        day: null, \n        phaseEmoji: null, \n        rawDay: null,\n        month: null\n    });\n\n    const isSabbath = (day) =>{\n        if (day === 8 || day === 15 || day === 22 || day === 29){\n            return \"Sabbath\";\n        }\n\n        return day\n    }\n\n    return(\n        <Card variant=\"outlined\" style={cardStyles}>\n            <h1>Lunar Calendar</h1>\n            <label htmlFor=\"lunar-phase\">Phase</label>\n            <p>{lunarDate.phaseEmoji}</p>\n            <p>{lunarDate.phase}</p>\n            <label htmlFor=\"lunar-month\">Month</label>\n            <p >{lunarDate.month || '?'}</p>\n            <label htmlFor=\"day\">Day</label>\n            <p id=\"day\">{isSabbath(lunarDate.day)}</p>\n            <label htmlFor=\"raw\">Raw Day</label>\n            <p id=\"raw\">{lunarDate.rawDay?.toFixed(1)}</p>\n        </Card>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}