{"ast":null,"code":"/*! @hebcal/core v5.9.0, distributed under GPLv2 https://www.gnu.org/licenses/gpl-2.0.txt */\nimport { Locale, gematriya, months } from '@hebcal/hdate';\nimport { Event, flags } from './event.js';\nimport './locale.js';\n\n/** Daily Hebrew date (\"11th of Sivan, 5780\") */\nclass HebrewDateEvent extends Event {\n  /**\n   * @param date\n   */\n  constructor(date) {\n    super(date, date.toString(), flags.HEBREW_DATE);\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   * @example\n   * import {HDate, HebrewDateEvent, months} from '@hebcal/core';\n   *\n   * const hd = new HDate(15, months.CHESHVAN, 5769);\n   * const ev = new HebrewDateEvent(hd);\n   * console.log(ev.render('en')); // '15th of Cheshvan, 5769'\n   * console.log(ev.render('he')); // 'ט״ו חֶשְׁוָן תשס״ט'\n   */\n  render(locale) {\n    const locale1 = locale === null || locale === undefined ? undefined : locale.toLowerCase();\n    const locale0 = locale1 !== null && locale1 !== undefined ? locale1 : Locale.getLocaleName();\n    const hd = this.getDate();\n    switch (locale0) {\n      case 'h':\n      case 'he':\n        return hd.renderGematriya(false);\n      case 'he-x-nonikud':\n        return hd.renderGematriya(true);\n      default:\n        return hd.render(locale0, true);\n    }\n  }\n  /**\n   * @private\n   * @param locale\n   */\n  renderBriefHebrew(locale) {\n    const hd = this.getDate();\n    const dd = hd.getDate();\n    const mm = Locale.gettext(hd.getMonthName(), locale);\n    return gematriya(dd) + ' ' + mm;\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   * @example\n   * import {HDate, HebrewDateEvent, months} from '@hebcal/core';\n   *\n   * const hd = new HDate(15, months.CHESHVAN, 5769);\n   * const ev = new HebrewDateEvent(hd);\n   * console.log(ev.renderBrief()); // '15th of Cheshvan'\n   * console.log(ev.renderBrief('he')); // 'ט״ו חֶשְׁוָן'\n   */\n  renderBrief(locale) {\n    const locale1 = locale === null || locale === undefined ? undefined : locale.toLowerCase();\n    const locale0 = locale1 !== null && locale1 !== undefined ? locale1 : Locale.getLocaleName();\n    const hd = this.getDate();\n    if (hd.getMonth() === months.TISHREI && hd.getDate() === 1) {\n      return this.render(locale0);\n    }\n    switch (locale0) {\n      case 'h':\n      case 'he':\n      case 'he-x-nonikud':\n        return this.renderBriefHebrew(locale0);\n      default:\n        return hd.render(locale0, false);\n    }\n  }\n}\nexport { HebrewDateEvent };","map":{"version":3,"names":["HebrewDateEvent","Event","constructor","date","toString","flags","HEBREW_DATE","render","locale","locale1","undefined","toLowerCase","locale0","Locale","getLocaleName","hd","getDate","renderGematriya","renderBriefHebrew","dd","mm","gettext","getMonthName","gematriya","renderBrief","getMonth","months","TISHREI"],"sources":["/Users/shelton/Desktop/Personal Projects/BibliCalendar/biblicalendar_app/node_modules/@hebcal/src/HebrewDateEvent.ts"],"sourcesContent":["import {HDate, gematriya, months, Locale} from '@hebcal/hdate';\nimport {Event, flags} from './event';\nimport './locale'; // Adds Hebrew and Ashkenazic translations\n\n/** Daily Hebrew date (\"11th of Sivan, 5780\") */\nexport class HebrewDateEvent extends Event {\n  /**\n   * @param date\n   */\n  constructor(date: HDate) {\n    super(date, date.toString(), flags.HEBREW_DATE);\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   * @example\n   * import {HDate, HebrewDateEvent, months} from '@hebcal/core';\n   *\n   * const hd = new HDate(15, months.CHESHVAN, 5769);\n   * const ev = new HebrewDateEvent(hd);\n   * console.log(ev.render('en')); // '15th of Cheshvan, 5769'\n   * console.log(ev.render('he')); // 'ט״ו חֶשְׁוָן תשס״ט'\n   */\n  render(locale?: string): string {\n    const locale1 = locale?.toLowerCase();\n    const locale0 = locale1 ?? Locale.getLocaleName();\n    const hd = this.getDate();\n    switch (locale0) {\n      case 'h':\n      case 'he':\n        return hd.renderGematriya(false);\n      case 'he-x-nonikud':\n        return hd.renderGematriya(true);\n      default:\n        return hd.render(locale0, true);\n    }\n  }\n  /**\n   * @private\n   * @param locale\n   */\n  private renderBriefHebrew(locale: string): string {\n    const hd = this.getDate();\n    const dd = hd.getDate();\n    const mm = Locale.gettext(hd.getMonthName(), locale);\n    return gematriya(dd) + ' ' + mm;\n  }\n  /**\n   * @param [locale] Optional locale name (defaults to active locale).\n   * @example\n   * import {HDate, HebrewDateEvent, months} from '@hebcal/core';\n   *\n   * const hd = new HDate(15, months.CHESHVAN, 5769);\n   * const ev = new HebrewDateEvent(hd);\n   * console.log(ev.renderBrief()); // '15th of Cheshvan'\n   * console.log(ev.renderBrief('he')); // 'ט״ו חֶשְׁוָן'\n   */\n  renderBrief(locale?: string): string {\n    const locale1 = locale?.toLowerCase();\n    const locale0 = locale1 ?? Locale.getLocaleName();\n    const hd = this.getDate();\n    if (hd.getMonth() === months.TISHREI && hd.getDate() === 1) {\n      return this.render(locale0);\n    }\n    switch (locale0) {\n      case 'h':\n      case 'he':\n      case 'he-x-nonikud':\n        return this.renderBriefHebrew(locale0);\n      default:\n        return hd.render(locale0, false);\n    }\n  }\n}\n"],"mappings":";;;;;AAIA;AACM,MAAOA,eAAgB,SAAQC,KAAK;EACxC;;AAEG;EACHC,YAAYC,IAAW;IACrB,KAAK,CAACA,IAAI,EAAEA,IAAI,CAACC,QAAQ,EAAE,EAAEC,KAAK,CAACC,WAAW,CAAC;;EAEjD;;;;;;;;;AASG;EACHC,MAAMA,CAACC,MAAe;IACpB,MAAMC,OAAO,GAAGD,MAAM,KAAN,QAAAA,MAAM,KAAAE,SAAA,GAAAA,SAAA,GAANF,MAAM,CAAEG,WAAW,EAAE;IACrC,MAAMC,OAAO,GAAGH,OAAO,aAAPA,OAAO,KAAAC,SAAA,GAAPD,OAAO,GAAII,MAAM,CAACC,aAAa,EAAE;IACjD,MAAMC,EAAE,GAAG,IAAI,CAACC,OAAO,EAAE;IACzB,QAAQJ,OAAO;MACb,KAAK,GAAG;MACR,KAAK,IAAI;QACP,OAAOG,EAAE,CAACE,eAAe,CAAC,KAAK,CAAC;MAClC,KAAK,cAAc;QACjB,OAAOF,EAAE,CAACE,eAAe,CAAC,IAAI,CAAC;MACjC;QACE,OAAOF,EAAE,CAACR,MAAM,CAACK,OAAO,EAAE,IAAI,CAAC;;;EAGrC;;;AAGG;EACKM,iBAAiBA,CAACV,MAAc;IACtC,MAAMO,EAAE,GAAG,IAAI,CAACC,OAAO,EAAE;IACzB,MAAMG,EAAE,GAAGJ,EAAE,CAACC,OAAO,EAAE;IACvB,MAAMI,EAAE,GAAGP,MAAM,CAACQ,OAAO,CAACN,EAAE,CAACO,YAAY,EAAE,EAAEd,MAAM,CAAC;IACpD,OAAOe,SAAS,CAACJ,EAAE,CAAC,GAAG,GAAG,GAAGC,EAAE;;EAEjC;;;;;;;;;AASG;EACHI,WAAWA,CAAChB,MAAe;IACzB,MAAMC,OAAO,GAAGD,MAAM,KAAN,QAAAA,MAAM,KAAAE,SAAA,GAAAA,SAAA,GAANF,MAAM,CAAEG,WAAW,EAAE;IACrC,MAAMC,OAAO,GAAGH,OAAO,aAAPA,OAAO,KAAAC,SAAA,GAAPD,OAAO,GAAII,MAAM,CAACC,aAAa,EAAE;IACjD,MAAMC,EAAE,GAAG,IAAI,CAACC,OAAO,EAAE;IACzB,IAAID,EAAE,CAACU,QAAQ,EAAE,KAAKC,MAAM,CAACC,OAAO,IAAIZ,EAAE,CAACC,OAAO,EAAE,KAAK,CAAC,EAAE;MAC1D,OAAO,IAAI,CAACT,MAAM,CAACK,OAAO,CAAC;;IAE7B,QAAQA,OAAO;MACb,KAAK,GAAG;MACR,KAAK,IAAI;MACT,KAAK,cAAc;QACjB,OAAO,IAAI,CAACM,iBAAiB,CAACN,OAAO,CAAC;MACxC;QACE,OAAOG,EAAE,CAACR,MAAM,CAACK,OAAO,EAAE,KAAK,CAAC;;;AAGvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}