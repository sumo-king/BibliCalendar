{"version":3,"file":"index.iife.js","sources":["../src/constants/Hemisphere.ts","../src/constants/LunarEmoji.ts","../src/constants/LunarMonth.ts","../src/constants/LunarPhase.ts","../src/constants/Time.ts","../src/Julian.ts","../src/factory/defaultOptions.ts","../src/utils/MathUtil.ts","../src/Moon.ts","../src/constants/Unit.ts"],"sourcesContent":["/**\n * Earth's hemispheres.\n */\nexport enum Hemisphere {\n  NORTHERN = \"Northern\",\n  SOUTHERN = \"Southern\",\n}\n","/**\n * Enumeration of lunar phases as emoji for the Northern Hemisphere.\n */\nexport enum NorthernHemisphereLunarEmoji {\n  NEW = \"ðŸŒ‘\",\n  WAXING_CRESCENT = \"ðŸŒ’\",\n  FIRST_QUARTER = \"ðŸŒ“\",\n  WAXING_GIBBOUS = \"ðŸŒ”\",\n  FULL = \"ðŸŒ•\",\n  WANING_GIBBOUS = \"ðŸŒ–\",\n  LAST_QUARTER = \"ðŸŒ—\",\n  WANING_CRESCENT = \"ðŸŒ˜\",\n}\n\n/**\n * Enumeration of lunar phases as emoji for the Southern Hemisphere.\n */\nexport enum SouthernHemisphereLunarEmoji {\n  NEW = \"ðŸŒ‘\",\n  WAXING_CRESCENT = \"ðŸŒ˜\",\n  FIRST_QUARTER = \"ðŸŒ—\",\n  WAXING_GIBBOUS = \"ðŸŒ–\",\n  FULL = \"ðŸŒ•\",\n  WANING_GIBBOUS = \"ðŸŒ”\",\n  LAST_QUARTER = \"ðŸŒ“\",\n  WANING_CRESCENT = \"ðŸŒ’\",\n}\n","/**\n * Lunar month, time between two successive syzygies of the\n * same type: new moons or full moons\n */\nexport enum LunarMonth {\n  ANOMALISTIC = \"Anomalistic\",\n  DRACONIC = \"Draconic\",\n  SIDEREAL = \"Sidereal\",\n  SYNODIC = \"Synodic\",\n  TROPICAL = \"Tropical\",\n}\n","/**\n * Enumeration of lunar phases\n */\nexport enum LunarPhase {\n  NEW = \"New\",\n  WAXING_CRESCENT = \"Waxing Crescent\",\n  FIRST_QUARTER = \"First Quarter\",\n  WAXING_GIBBOUS = \"Waxing Gibbous\",\n  FULL = \"Full\",\n  WANING_GIBBOUS = \"Waning Gibbous\",\n  LAST_QUARTER = \"Last Quarter\",\n  WANING_CRESCENT = \"Waning Crescent\",\n}\n","/**\n * Timestamp epoch, January 1, 1970, in Julian Days.\n * @type {number}\n */\nexport const EPOCH = 2440587.5;\n\n/**\n * Lunation 1 as the first new moon of 1923 at approximately\n * 02:41 UTC, January 17, 1923 per Ernest William Brown's lunar theory.\n */\nexport const LUNATION_BASE_JULIAN_DAY = 2423436.6115277777;\n\n/**\n * Length of one phase (1/8 of a synodic month) in Earth days.\n */\nexport const PHASE_LENGTH = 3.69132346322;\n\n/**\n * Orbital period of the Moon from perigee to apogee and back to perigee\n */\nexport const ANOMALISTIC_MONTH = 27.55454988;\n\n/**\n * Length of one synodic month - lunation, or days for the phases to complete a cycle.\n * Time between two identical syzygies, equivalent of 29.53059 Earth days.\n *\n * Based on Mean Synodic Month, 2000 AD mean solar days.\n */\nexport const SYNODIC_MONTH = 29.53058770576;\n","import { EPOCH } from \"./constants/Time\";\n\n/**\n * Julian calendar, chronological days since noon Universal Time on January 1, 4713 BC\n */\nexport class Julian {\n  /**\n   * Julian day from Gregorian date.\n   */\n  static fromDate(date = new Date()): number {\n    const time = date.getTime();\n    return time / 86400000 - date.getTimezoneOffset() / 1440 + EPOCH;\n  }\n\n  /**\n   * Gregorian date from Julian day\n   */\n  static toDate(julian: number): Date {\n    const date = new Date();\n    date.setTime((julian - EPOCH + date.getTimezoneOffset() / 1440) * 86400000);\n\n    return date;\n  }\n}\n","import { Hemisphere } from \"../constants/Hemisphere\";\nimport { MoonOptions } from \"../MoonOptions\";\n\n/** Default moon options factory */\nexport const defaultOptions: Partial<MoonOptions> = {\n  hemisphere: Hemisphere.NORTHERN,\n};\n","/**\n * Normalization utility for percentage calculations.\n */\nexport const normalize = (value: number): number => {\n  value -= Math.floor(value);\n  if (value < 0) value += 1;\n\n  return value;\n};\n","import { Julian } from \"./Julian\";\nimport { ANOMALISTIC_MONTH, LUNATION_BASE_JULIAN_DAY, SYNODIC_MONTH } from \"./constants/Time\";\nimport { Hemisphere } from \"./constants/Hemisphere\";\nimport { LunarPhase } from \"./constants/LunarPhase\";\nimport { MoonOptions } from \"./MoonOptions\";\nimport { NorthernHemisphereLunarEmoji, SouthernHemisphereLunarEmoji } from \"./constants/LunarEmoji\";\nimport { defaultOptions } from \"./factory/defaultOptions\";\nimport { normalize } from \"./utils/MathUtil\";\n\n/**\n * Calculations relating to Earth's moon.\n */\nexport class Moon {\n  /**\n   * Moon's age, or Earth days since the last new moon,\n   * normalized within a 29.53059 Earth days calendar.\n   */\n  static lunarAge(date = new Date()) {\n    const percent = Moon.lunarAgePercent(date);\n    return percent * SYNODIC_MONTH;\n  }\n\n  /**\n   * Percentage through the lunar synodic month.\n   */\n  static lunarAgePercent(date = new Date()) {\n    return normalize((Julian.fromDate(date) - 2451550.1) / SYNODIC_MONTH);\n  }\n\n  /**\n   * Brown Lunation Number (BLN), per Ernest William Brown's lunar theory,\n   * defining Lunation 1 as the first new moon of 1923 at\n   * approximately 02:41 UTC, January 17, 1923.\n   */\n  static lunationNumber(date = new Date()) {\n    return Math.round((Julian.fromDate(date) - LUNATION_BASE_JULIAN_DAY) / SYNODIC_MONTH) + 1;\n  }\n\n  /**\n   * Distance to the moon measured in units of Earth radii, with\n   * perigee at 56 and apogee at 63.8.\n   */\n  static lunarDistance(date = new Date()) {\n    const julian = Julian.fromDate(date);\n    const agePercent = Moon.lunarAgePercent(date);\n    const radians = agePercent * 2 * Math.PI;\n    const percent = 2 * Math.PI * normalize((julian - 2451562.2) / ANOMALISTIC_MONTH);\n\n    return 60.4 - 3.3 * Math.cos(percent) - 0.6 * Math.cos(2 * radians - percent) - 0.5 * Math.cos(2 * radians);\n  }\n\n  /**\n   * Name of the lunar phase per date submitted.\n   */\n  static lunarPhase(date = new Date(), options?: Partial<MoonOptions>) {\n    options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    const age = Moon.lunarAge(date);\n\n    if (age < 1.84566173161) return LunarPhase.NEW;\n    else if (age < 5.53698519483) return LunarPhase.WAXING_CRESCENT;\n    else if (age < 9.22830865805) return LunarPhase.FIRST_QUARTER;\n    else if (age < 12.91963212127) return LunarPhase.WAXING_GIBBOUS;\n    else if (age < 16.61095558449) return LunarPhase.FULL;\n    else if (age < 20.30227904771) return LunarPhase.WANING_GIBBOUS;\n    else if (age < 23.99360251093) return LunarPhase.LAST_QUARTER;\n    else if (age < 27.68492597415) return LunarPhase.WANING_CRESCENT;\n\n    return LunarPhase.NEW;\n  }\n\n  /**\n   * Emoji of the lunar phase per date submitted.\n   */\n  static lunarPhaseEmoji(date = new Date(), options?: Partial<MoonOptions>) {\n    options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    const phase = Moon.lunarPhase(date);\n\n    return Moon.emojiForLunarPhase(phase, options);\n  }\n\n  /**\n   * Emoji for specified lunar phase.\n   */\n  static emojiForLunarPhase(phase: LunarPhase, options?: Partial<MoonOptions>) {\n    const { hemisphere } = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    let emoji;\n\n    if (hemisphere === Hemisphere.SOUTHERN) {\n      emoji = SouthernHemisphereLunarEmoji;\n    } else {\n      emoji = NorthernHemisphereLunarEmoji;\n    }\n\n    switch (phase) {\n      case LunarPhase.WANING_CRESCENT:\n        return emoji[\"WANING_CRESCENT\"];\n      case LunarPhase.LAST_QUARTER:\n        return emoji[\"LAST_QUARTER\"];\n      case LunarPhase.WANING_GIBBOUS:\n        return emoji[\"WANING_GIBBOUS\"];\n      case LunarPhase.FULL:\n        return emoji[\"FULL\"];\n      case LunarPhase.WAXING_GIBBOUS:\n        return emoji[\"WAXING_GIBBOUS\"];\n      case LunarPhase.FIRST_QUARTER:\n        return emoji[\"FIRST_QUARTER\"];\n      case LunarPhase.WAXING_CRESCENT:\n        return emoji[\"WAXING_CRESCENT\"];\n\n      default:\n      case LunarPhase.NEW:\n        return emoji[\"NEW\"];\n    }\n  }\n\n  /**\n   * Whether the moon is currently waxing (growing).\n   */\n  static isWaxing(date = new Date()) {\n    const age = Moon.lunarAge(date);\n    return age <= 14.765;\n  }\n\n  /**\n   * Whether the moon is currently waning (shrinking).\n   */\n  static isWaning(date = new Date()) {\n    const age = Moon.lunarAge(date);\n    return age > 14.765;\n  }\n}\n","/**\n * Units of measure\n */\nexport enum Unit {\n  EARTH_RADII = \"Earth Radii\",\n  KILOMETERS = \"km\",\n  MILES = \"m\",\n}\n"],"names":["Hemisphere","NorthernHemisphereLunarEmoji","SouthernHemisphereLunarEmoji","LunarMonth","LunarPhase","EPOCH","LUNATION_BASE_JULIAN_DAY","ANOMALISTIC_MONTH","SYNODIC_MONTH","Julian","date","julian","defaultOptions","normalize","value","Moon","radians","percent","options","age","phase","hemisphere","emoji","Unit"],"mappings":"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"}